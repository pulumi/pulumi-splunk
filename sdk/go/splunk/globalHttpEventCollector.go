// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package splunk

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// ## # Resource: GlobalHttpEventCollector
//
// Update Global HTTP Event Collector input configuration.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-splunk/sdk/go/splunk"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := splunk.NewGlobalHttpEventCollector(ctx, "http", &splunk.GlobalHttpEventCollectorArgs{
// 			Disabled:  pulumi.Bool(false),
// 			EnableSsl: pulumi.Bool(true),
// 			Port:      pulumi.Int(8088),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type GlobalHttpEventCollector struct {
	pulumi.CustomResourceState

	// Number of threads used by HTTP Input server.
	DedicatedIoThreads pulumi.IntOutput `pulumi:"dedicatedIoThreads"`
	// Input disabled indicator.
	Disabled pulumi.BoolOutput `pulumi:"disabled"`
	// Enable SSL protocol for HTTP data input. `true` = SSL enabled, `false` = SSL disabled.
	EnableSsl pulumi.BoolOutput `pulumi:"enableSsl"`
	// Maximum number of simultaneous HTTP connections accepted. Adjusting this value may cause server performance issues and is not generally recommended. Possible values for this setting vary by OS.
	MaxSockets pulumi.IntOutput `pulumi:"maxSockets"`
	// Maximum number of threads that can be used by active HTTP transactions. Adjusting this value may cause server performance issues and is not generally recommended. Possible values for this setting vary by OS.
	MaxThreads pulumi.IntOutput `pulumi:"maxThreads"`
	// HTTP data input IP port.
	Port pulumi.IntOutput `pulumi:"port"`
	// Indicates whether the event collector input writes its configuration to a deployment server repository. When this setting is set to 1 (enabled), the input writes its configuration to the directory specified as repositoryLocation in serverclass.conf.
	// Copy the full contents of the splunkHttpinput app directory to this directory for the configuration to work. When enabled, only the tokens defined in the splunkHttpinput app in this repository are viewable and editable on the API and the Data Inputs page in Splunk Web. When disabled, the input writes its configuration to $SPLUNK_HOME/etc/apps by default. Defaults to 0 (disabled).
	UseDeploymentServer pulumi.IntOutput `pulumi:"useDeploymentServer"`
}

// NewGlobalHttpEventCollector registers a new resource with the given unique name, arguments, and options.
func NewGlobalHttpEventCollector(ctx *pulumi.Context,
	name string, args *GlobalHttpEventCollectorArgs, opts ...pulumi.ResourceOption) (*GlobalHttpEventCollector, error) {
	if args == nil {
		args = &GlobalHttpEventCollectorArgs{}
	}

	var resource GlobalHttpEventCollector
	err := ctx.RegisterResource("splunk:index/globalHttpEventCollector:GlobalHttpEventCollector", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGlobalHttpEventCollector gets an existing GlobalHttpEventCollector resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGlobalHttpEventCollector(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GlobalHttpEventCollectorState, opts ...pulumi.ResourceOption) (*GlobalHttpEventCollector, error) {
	var resource GlobalHttpEventCollector
	err := ctx.ReadResource("splunk:index/globalHttpEventCollector:GlobalHttpEventCollector", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GlobalHttpEventCollector resources.
type globalHttpEventCollectorState struct {
	// Number of threads used by HTTP Input server.
	DedicatedIoThreads *int `pulumi:"dedicatedIoThreads"`
	// Input disabled indicator.
	Disabled *bool `pulumi:"disabled"`
	// Enable SSL protocol for HTTP data input. `true` = SSL enabled, `false` = SSL disabled.
	EnableSsl *bool `pulumi:"enableSsl"`
	// Maximum number of simultaneous HTTP connections accepted. Adjusting this value may cause server performance issues and is not generally recommended. Possible values for this setting vary by OS.
	MaxSockets *int `pulumi:"maxSockets"`
	// Maximum number of threads that can be used by active HTTP transactions. Adjusting this value may cause server performance issues and is not generally recommended. Possible values for this setting vary by OS.
	MaxThreads *int `pulumi:"maxThreads"`
	// HTTP data input IP port.
	Port *int `pulumi:"port"`
	// Indicates whether the event collector input writes its configuration to a deployment server repository. When this setting is set to 1 (enabled), the input writes its configuration to the directory specified as repositoryLocation in serverclass.conf.
	// Copy the full contents of the splunkHttpinput app directory to this directory for the configuration to work. When enabled, only the tokens defined in the splunkHttpinput app in this repository are viewable and editable on the API and the Data Inputs page in Splunk Web. When disabled, the input writes its configuration to $SPLUNK_HOME/etc/apps by default. Defaults to 0 (disabled).
	UseDeploymentServer *int `pulumi:"useDeploymentServer"`
}

type GlobalHttpEventCollectorState struct {
	// Number of threads used by HTTP Input server.
	DedicatedIoThreads pulumi.IntPtrInput
	// Input disabled indicator.
	Disabled pulumi.BoolPtrInput
	// Enable SSL protocol for HTTP data input. `true` = SSL enabled, `false` = SSL disabled.
	EnableSsl pulumi.BoolPtrInput
	// Maximum number of simultaneous HTTP connections accepted. Adjusting this value may cause server performance issues and is not generally recommended. Possible values for this setting vary by OS.
	MaxSockets pulumi.IntPtrInput
	// Maximum number of threads that can be used by active HTTP transactions. Adjusting this value may cause server performance issues and is not generally recommended. Possible values for this setting vary by OS.
	MaxThreads pulumi.IntPtrInput
	// HTTP data input IP port.
	Port pulumi.IntPtrInput
	// Indicates whether the event collector input writes its configuration to a deployment server repository. When this setting is set to 1 (enabled), the input writes its configuration to the directory specified as repositoryLocation in serverclass.conf.
	// Copy the full contents of the splunkHttpinput app directory to this directory for the configuration to work. When enabled, only the tokens defined in the splunkHttpinput app in this repository are viewable and editable on the API and the Data Inputs page in Splunk Web. When disabled, the input writes its configuration to $SPLUNK_HOME/etc/apps by default. Defaults to 0 (disabled).
	UseDeploymentServer pulumi.IntPtrInput
}

func (GlobalHttpEventCollectorState) ElementType() reflect.Type {
	return reflect.TypeOf((*globalHttpEventCollectorState)(nil)).Elem()
}

type globalHttpEventCollectorArgs struct {
	// Number of threads used by HTTP Input server.
	DedicatedIoThreads *int `pulumi:"dedicatedIoThreads"`
	// Input disabled indicator.
	Disabled *bool `pulumi:"disabled"`
	// Enable SSL protocol for HTTP data input. `true` = SSL enabled, `false` = SSL disabled.
	EnableSsl *bool `pulumi:"enableSsl"`
	// Maximum number of simultaneous HTTP connections accepted. Adjusting this value may cause server performance issues and is not generally recommended. Possible values for this setting vary by OS.
	MaxSockets *int `pulumi:"maxSockets"`
	// Maximum number of threads that can be used by active HTTP transactions. Adjusting this value may cause server performance issues and is not generally recommended. Possible values for this setting vary by OS.
	MaxThreads *int `pulumi:"maxThreads"`
	// HTTP data input IP port.
	Port *int `pulumi:"port"`
	// Indicates whether the event collector input writes its configuration to a deployment server repository. When this setting is set to 1 (enabled), the input writes its configuration to the directory specified as repositoryLocation in serverclass.conf.
	// Copy the full contents of the splunkHttpinput app directory to this directory for the configuration to work. When enabled, only the tokens defined in the splunkHttpinput app in this repository are viewable and editable on the API and the Data Inputs page in Splunk Web. When disabled, the input writes its configuration to $SPLUNK_HOME/etc/apps by default. Defaults to 0 (disabled).
	UseDeploymentServer *int `pulumi:"useDeploymentServer"`
}

// The set of arguments for constructing a GlobalHttpEventCollector resource.
type GlobalHttpEventCollectorArgs struct {
	// Number of threads used by HTTP Input server.
	DedicatedIoThreads pulumi.IntPtrInput
	// Input disabled indicator.
	Disabled pulumi.BoolPtrInput
	// Enable SSL protocol for HTTP data input. `true` = SSL enabled, `false` = SSL disabled.
	EnableSsl pulumi.BoolPtrInput
	// Maximum number of simultaneous HTTP connections accepted. Adjusting this value may cause server performance issues and is not generally recommended. Possible values for this setting vary by OS.
	MaxSockets pulumi.IntPtrInput
	// Maximum number of threads that can be used by active HTTP transactions. Adjusting this value may cause server performance issues and is not generally recommended. Possible values for this setting vary by OS.
	MaxThreads pulumi.IntPtrInput
	// HTTP data input IP port.
	Port pulumi.IntPtrInput
	// Indicates whether the event collector input writes its configuration to a deployment server repository. When this setting is set to 1 (enabled), the input writes its configuration to the directory specified as repositoryLocation in serverclass.conf.
	// Copy the full contents of the splunkHttpinput app directory to this directory for the configuration to work. When enabled, only the tokens defined in the splunkHttpinput app in this repository are viewable and editable on the API and the Data Inputs page in Splunk Web. When disabled, the input writes its configuration to $SPLUNK_HOME/etc/apps by default. Defaults to 0 (disabled).
	UseDeploymentServer pulumi.IntPtrInput
}

func (GlobalHttpEventCollectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*globalHttpEventCollectorArgs)(nil)).Elem()
}

type GlobalHttpEventCollectorInput interface {
	pulumi.Input

	ToGlobalHttpEventCollectorOutput() GlobalHttpEventCollectorOutput
	ToGlobalHttpEventCollectorOutputWithContext(ctx context.Context) GlobalHttpEventCollectorOutput
}

func (GlobalHttpEventCollector) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalHttpEventCollector)(nil)).Elem()
}

func (i GlobalHttpEventCollector) ToGlobalHttpEventCollectorOutput() GlobalHttpEventCollectorOutput {
	return i.ToGlobalHttpEventCollectorOutputWithContext(context.Background())
}

func (i GlobalHttpEventCollector) ToGlobalHttpEventCollectorOutputWithContext(ctx context.Context) GlobalHttpEventCollectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalHttpEventCollectorOutput)
}

type GlobalHttpEventCollectorOutput struct {
	*pulumi.OutputState
}

func (GlobalHttpEventCollectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalHttpEventCollectorOutput)(nil)).Elem()
}

func (o GlobalHttpEventCollectorOutput) ToGlobalHttpEventCollectorOutput() GlobalHttpEventCollectorOutput {
	return o
}

func (o GlobalHttpEventCollectorOutput) ToGlobalHttpEventCollectorOutputWithContext(ctx context.Context) GlobalHttpEventCollectorOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(GlobalHttpEventCollectorOutput{})
}
