# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from . import _utilities
import typing
# Export this package's modules as members:
from .admin_saml_groups import *
from .apps_local import *
from .authentication_users import *
from .authorization_roles import *
from .configs_conf import *
from .data_ui_views import *
from .generic_acl import *
from .global_http_event_collector import *
from .indexes import *
from .inputs_http_event_collector import *
from .inputs_monitor import *
from .inputs_script import *
from .inputs_tcp_cooked import *
from .inputs_tcp_raw import *
from .inputs_tcp_splunk_tcp_token import *
from .inputs_tcp_ssl import *
from .inputs_udp import *
from .outputs_tcp_default import *
from .outputs_tcp_group import *
from .outputs_tcp_server import *
from .outputs_tcp_syslog import *
from .provider import *
from .saved_searches import *
from .sh_indexes_manager import *
from ._inputs import *
from . import outputs

# Make subpackages available:
if typing.TYPE_CHECKING:
    import pulumi_splunk.config as __config
    config = __config
else:
    config = _utilities.lazy_import('pulumi_splunk.config')

_utilities.register(
    resource_modules="""
[
 {
  "pkg": "splunk",
  "mod": "index/adminSamlGroups",
  "fqn": "pulumi_splunk",
  "classes": {
   "splunk:index/adminSamlGroups:AdminSamlGroups": "AdminSamlGroups"
  }
 },
 {
  "pkg": "splunk",
  "mod": "index/appsLocal",
  "fqn": "pulumi_splunk",
  "classes": {
   "splunk:index/appsLocal:AppsLocal": "AppsLocal"
  }
 },
 {
  "pkg": "splunk",
  "mod": "index/authenticationUsers",
  "fqn": "pulumi_splunk",
  "classes": {
   "splunk:index/authenticationUsers:AuthenticationUsers": "AuthenticationUsers"
  }
 },
 {
  "pkg": "splunk",
  "mod": "index/authorizationRoles",
  "fqn": "pulumi_splunk",
  "classes": {
   "splunk:index/authorizationRoles:AuthorizationRoles": "AuthorizationRoles"
  }
 },
 {
  "pkg": "splunk",
  "mod": "index/configsConf",
  "fqn": "pulumi_splunk",
  "classes": {
   "splunk:index/configsConf:ConfigsConf": "ConfigsConf"
  }
 },
 {
  "pkg": "splunk",
  "mod": "index/dataUiViews",
  "fqn": "pulumi_splunk",
  "classes": {
   "splunk:index/dataUiViews:DataUiViews": "DataUiViews"
  }
 },
 {
  "pkg": "splunk",
  "mod": "index/genericAcl",
  "fqn": "pulumi_splunk",
  "classes": {
   "splunk:index/genericAcl:GenericAcl": "GenericAcl"
  }
 },
 {
  "pkg": "splunk",
  "mod": "index/globalHttpEventCollector",
  "fqn": "pulumi_splunk",
  "classes": {
   "splunk:index/globalHttpEventCollector:GlobalHttpEventCollector": "GlobalHttpEventCollector"
  }
 },
 {
  "pkg": "splunk",
  "mod": "index/indexes",
  "fqn": "pulumi_splunk",
  "classes": {
   "splunk:index/indexes:Indexes": "Indexes"
  }
 },
 {
  "pkg": "splunk",
  "mod": "index/inputsHttpEventCollector",
  "fqn": "pulumi_splunk",
  "classes": {
   "splunk:index/inputsHttpEventCollector:InputsHttpEventCollector": "InputsHttpEventCollector"
  }
 },
 {
  "pkg": "splunk",
  "mod": "index/inputsMonitor",
  "fqn": "pulumi_splunk",
  "classes": {
   "splunk:index/inputsMonitor:InputsMonitor": "InputsMonitor"
  }
 },
 {
  "pkg": "splunk",
  "mod": "index/inputsScript",
  "fqn": "pulumi_splunk",
  "classes": {
   "splunk:index/inputsScript:InputsScript": "InputsScript"
  }
 },
 {
  "pkg": "splunk",
  "mod": "index/inputsTcpCooked",
  "fqn": "pulumi_splunk",
  "classes": {
   "splunk:index/inputsTcpCooked:InputsTcpCooked": "InputsTcpCooked"
  }
 },
 {
  "pkg": "splunk",
  "mod": "index/inputsTcpRaw",
  "fqn": "pulumi_splunk",
  "classes": {
   "splunk:index/inputsTcpRaw:InputsTcpRaw": "InputsTcpRaw"
  }
 },
 {
  "pkg": "splunk",
  "mod": "index/inputsTcpSplunkTcpToken",
  "fqn": "pulumi_splunk",
  "classes": {
   "splunk:index/inputsTcpSplunkTcpToken:InputsTcpSplunkTcpToken": "InputsTcpSplunkTcpToken"
  }
 },
 {
  "pkg": "splunk",
  "mod": "index/inputsTcpSsl",
  "fqn": "pulumi_splunk",
  "classes": {
   "splunk:index/inputsTcpSsl:InputsTcpSsl": "InputsTcpSsl"
  }
 },
 {
  "pkg": "splunk",
  "mod": "index/inputsUdp",
  "fqn": "pulumi_splunk",
  "classes": {
   "splunk:index/inputsUdp:InputsUdp": "InputsUdp"
  }
 },
 {
  "pkg": "splunk",
  "mod": "index/outputsTcpDefault",
  "fqn": "pulumi_splunk",
  "classes": {
   "splunk:index/outputsTcpDefault:OutputsTcpDefault": "OutputsTcpDefault"
  }
 },
 {
  "pkg": "splunk",
  "mod": "index/outputsTcpGroup",
  "fqn": "pulumi_splunk",
  "classes": {
   "splunk:index/outputsTcpGroup:OutputsTcpGroup": "OutputsTcpGroup"
  }
 },
 {
  "pkg": "splunk",
  "mod": "index/outputsTcpServer",
  "fqn": "pulumi_splunk",
  "classes": {
   "splunk:index/outputsTcpServer:OutputsTcpServer": "OutputsTcpServer"
  }
 },
 {
  "pkg": "splunk",
  "mod": "index/outputsTcpSyslog",
  "fqn": "pulumi_splunk",
  "classes": {
   "splunk:index/outputsTcpSyslog:OutputsTcpSyslog": "OutputsTcpSyslog"
  }
 },
 {
  "pkg": "splunk",
  "mod": "index/savedSearches",
  "fqn": "pulumi_splunk",
  "classes": {
   "splunk:index/savedSearches:SavedSearches": "SavedSearches"
  }
 },
 {
  "pkg": "splunk",
  "mod": "index/shIndexesManager",
  "fqn": "pulumi_splunk",
  "classes": {
   "splunk:index/shIndexesManager:ShIndexesManager": "ShIndexesManager"
  }
 }
]
""",
    resource_packages="""
[
 {
  "pkg": "splunk",
  "token": "pulumi:providers:splunk",
  "fqn": "pulumi_splunk",
  "class": "Provider"
 }
]
"""
)
