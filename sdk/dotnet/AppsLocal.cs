// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Splunk
{
    /// <summary>
    /// ## # Resource: splunk.AppsLocal
    /// 
    /// Create, install and manage apps on your Splunk instance
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Splunk = Pulumi.Splunk;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var amazonConnectApp = new Splunk.AppsLocal("amazonConnectApp", new()
    ///     {
    ///         ExplicitAppname = "amazon_connect_app_for_splunk",
    ///         Filename = true,
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [SplunkResourceType("splunk:index/appsLocal:AppsLocal")]
    public partial class AppsLocal : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The app/user context that is the namespace for the resource
        /// </summary>
        [Output("acl")]
        public Output<Outputs.AppsLocalAcl> Acl { get; private set; } = null!;

        /// <summary>
        /// Splunkbase session token for operations like install and update that require login. Use auth or session when installing or updating an app through Splunkbase.
        /// </summary>
        [Output("auth")]
        public Output<string?> Auth { get; private set; } = null!;

        /// <summary>
        /// For apps posted to Splunkbase, use your Splunk account username. For internal apps, include your name and contact information.
        /// </summary>
        [Output("author")]
        public Output<string> Author { get; private set; } = null!;

        /// <summary>
        /// Custom setup complete indication:
        /// &lt;br&gt;true = Custom app setup complete.
        /// &lt;br&gt;false = Custom app setup not complete.
        /// </summary>
        [Output("configured")]
        public Output<bool> Configured { get; private set; } = null!;

        /// <summary>
        /// Short app description also displayed below the app title in Splunk Web Launcher.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Custom app name. Overrides name when installing an app from a file where filename is set to true. See also filename.
        /// </summary>
        [Output("explicitAppname")]
        public Output<string?> ExplicitAppname { get; private set; } = null!;

        /// <summary>
        /// Indicates whether to use the name value as the app source location.
        /// &lt;br&gt;true indicates that name is a path to a file to install.
        /// &lt;br&gt;false indicates that name is the literal app name and that the app is created from Splunkbase using a template.
        /// </summary>
        [Output("filename")]
        public Output<bool?> Filename { get; private set; } = null!;

        /// <summary>
        /// App name displayed in Splunk Web, from five to eighty characters excluding the prefix "Splunk for".
        /// </summary>
        [Output("label")]
        public Output<string> Label { get; private set; } = null!;

        /// <summary>
        /// Literal app name or path for the file to install, depending on the value of filename.
        /// &lt;br&gt;filename = false indicates that name is the literal app name and that the app is created from Splunkbase using a template.
        /// &lt;br&gt;filename = true indicates that name is the URL or path to the local .tar, .tgz or .spl file. If name is the Splunkbase URL, set auth or session to authenticate the request.
        /// The app folder name cannot include spaces or special characters.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Login session token for installing or updating an app on Splunkbase. Alternatively, use auth.
        /// </summary>
        [Output("session")]
        public Output<string?> Session { get; private set; } = null!;

        /// <summary>
        /// File-based update indication:
        /// &lt;br&gt;true specifies that filename should be used to update an existing app. If not specified, update defaults to
        /// &lt;br&gt;false, which indicates that filename should not be used to update an existing app.
        /// </summary>
        [Output("update")]
        public Output<bool?> Update { get; private set; } = null!;

        /// <summary>
        /// App version.
        /// </summary>
        [Output("version")]
        public Output<string> Version { get; private set; } = null!;

        /// <summary>
        /// Indicates whether the app is visible and navigable from Splunk Web.
        /// &lt;br&gt;true = App is visible and navigable.
        /// &lt;br&gt;false = App is not visible or navigable.
        /// </summary>
        [Output("visible")]
        public Output<bool> Visible { get; private set; } = null!;


        /// <summary>
        /// Create a AppsLocal resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AppsLocal(string name, AppsLocalArgs? args = null, CustomResourceOptions? options = null)
            : base("splunk:index/appsLocal:AppsLocal", name, args ?? new AppsLocalArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AppsLocal(string name, Input<string> id, AppsLocalState? state = null, CustomResourceOptions? options = null)
            : base("splunk:index/appsLocal:AppsLocal", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AppsLocal resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AppsLocal Get(string name, Input<string> id, AppsLocalState? state = null, CustomResourceOptions? options = null)
        {
            return new AppsLocal(name, id, state, options);
        }
    }

    public sealed class AppsLocalArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The app/user context that is the namespace for the resource
        /// </summary>
        [Input("acl")]
        public Input<Inputs.AppsLocalAclArgs>? Acl { get; set; }

        /// <summary>
        /// Splunkbase session token for operations like install and update that require login. Use auth or session when installing or updating an app through Splunkbase.
        /// </summary>
        [Input("auth")]
        public Input<string>? Auth { get; set; }

        /// <summary>
        /// For apps posted to Splunkbase, use your Splunk account username. For internal apps, include your name and contact information.
        /// </summary>
        [Input("author")]
        public Input<string>? Author { get; set; }

        /// <summary>
        /// Custom setup complete indication:
        /// &lt;br&gt;true = Custom app setup complete.
        /// &lt;br&gt;false = Custom app setup not complete.
        /// </summary>
        [Input("configured")]
        public Input<bool>? Configured { get; set; }

        /// <summary>
        /// Short app description also displayed below the app title in Splunk Web Launcher.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Custom app name. Overrides name when installing an app from a file where filename is set to true. See also filename.
        /// </summary>
        [Input("explicitAppname")]
        public Input<string>? ExplicitAppname { get; set; }

        /// <summary>
        /// Indicates whether to use the name value as the app source location.
        /// &lt;br&gt;true indicates that name is a path to a file to install.
        /// &lt;br&gt;false indicates that name is the literal app name and that the app is created from Splunkbase using a template.
        /// </summary>
        [Input("filename")]
        public Input<bool>? Filename { get; set; }

        /// <summary>
        /// App name displayed in Splunk Web, from five to eighty characters excluding the prefix "Splunk for".
        /// </summary>
        [Input("label")]
        public Input<string>? Label { get; set; }

        /// <summary>
        /// Literal app name or path for the file to install, depending on the value of filename.
        /// &lt;br&gt;filename = false indicates that name is the literal app name and that the app is created from Splunkbase using a template.
        /// &lt;br&gt;filename = true indicates that name is the URL or path to the local .tar, .tgz or .spl file. If name is the Splunkbase URL, set auth or session to authenticate the request.
        /// The app folder name cannot include spaces or special characters.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Login session token for installing or updating an app on Splunkbase. Alternatively, use auth.
        /// </summary>
        [Input("session")]
        public Input<string>? Session { get; set; }

        /// <summary>
        /// File-based update indication:
        /// &lt;br&gt;true specifies that filename should be used to update an existing app. If not specified, update defaults to
        /// &lt;br&gt;false, which indicates that filename should not be used to update an existing app.
        /// </summary>
        [Input("update")]
        public Input<bool>? Update { get; set; }

        /// <summary>
        /// App version.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        /// <summary>
        /// Indicates whether the app is visible and navigable from Splunk Web.
        /// &lt;br&gt;true = App is visible and navigable.
        /// &lt;br&gt;false = App is not visible or navigable.
        /// </summary>
        [Input("visible")]
        public Input<bool>? Visible { get; set; }

        public AppsLocalArgs()
        {
        }
        public static new AppsLocalArgs Empty => new AppsLocalArgs();
    }

    public sealed class AppsLocalState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The app/user context that is the namespace for the resource
        /// </summary>
        [Input("acl")]
        public Input<Inputs.AppsLocalAclGetArgs>? Acl { get; set; }

        /// <summary>
        /// Splunkbase session token for operations like install and update that require login. Use auth or session when installing or updating an app through Splunkbase.
        /// </summary>
        [Input("auth")]
        public Input<string>? Auth { get; set; }

        /// <summary>
        /// For apps posted to Splunkbase, use your Splunk account username. For internal apps, include your name and contact information.
        /// </summary>
        [Input("author")]
        public Input<string>? Author { get; set; }

        /// <summary>
        /// Custom setup complete indication:
        /// &lt;br&gt;true = Custom app setup complete.
        /// &lt;br&gt;false = Custom app setup not complete.
        /// </summary>
        [Input("configured")]
        public Input<bool>? Configured { get; set; }

        /// <summary>
        /// Short app description also displayed below the app title in Splunk Web Launcher.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Custom app name. Overrides name when installing an app from a file where filename is set to true. See also filename.
        /// </summary>
        [Input("explicitAppname")]
        public Input<string>? ExplicitAppname { get; set; }

        /// <summary>
        /// Indicates whether to use the name value as the app source location.
        /// &lt;br&gt;true indicates that name is a path to a file to install.
        /// &lt;br&gt;false indicates that name is the literal app name and that the app is created from Splunkbase using a template.
        /// </summary>
        [Input("filename")]
        public Input<bool>? Filename { get; set; }

        /// <summary>
        /// App name displayed in Splunk Web, from five to eighty characters excluding the prefix "Splunk for".
        /// </summary>
        [Input("label")]
        public Input<string>? Label { get; set; }

        /// <summary>
        /// Literal app name or path for the file to install, depending on the value of filename.
        /// &lt;br&gt;filename = false indicates that name is the literal app name and that the app is created from Splunkbase using a template.
        /// &lt;br&gt;filename = true indicates that name is the URL or path to the local .tar, .tgz or .spl file. If name is the Splunkbase URL, set auth or session to authenticate the request.
        /// The app folder name cannot include spaces or special characters.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Login session token for installing or updating an app on Splunkbase. Alternatively, use auth.
        /// </summary>
        [Input("session")]
        public Input<string>? Session { get; set; }

        /// <summary>
        /// File-based update indication:
        /// &lt;br&gt;true specifies that filename should be used to update an existing app. If not specified, update defaults to
        /// &lt;br&gt;false, which indicates that filename should not be used to update an existing app.
        /// </summary>
        [Input("update")]
        public Input<bool>? Update { get; set; }

        /// <summary>
        /// App version.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        /// <summary>
        /// Indicates whether the app is visible and navigable from Splunk Web.
        /// &lt;br&gt;true = App is visible and navigable.
        /// &lt;br&gt;false = App is not visible or navigable.
        /// </summary>
        [Input("visible")]
        public Input<bool>? Visible { get; set; }

        public AppsLocalState()
        {
        }
        public static new AppsLocalState Empty => new AppsLocalState();
    }
}
