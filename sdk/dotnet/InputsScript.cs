// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Splunk
{
    /// <summary>
    /// ## # Resource: splunk.InputsScript
    /// 
    /// Create or update scripted inputs.
    /// </summary>
    [SplunkResourceType("splunk:index/inputsScript:InputsScript")]
    public partial class InputsScript : Pulumi.CustomResource
    {
        /// <summary>
        /// The app/user context that is the namespace for the resource
        /// </summary>
        [Output("acl")]
        public Output<Outputs.InputsScriptAcl> Acl { get; private set; } = null!;

        /// <summary>
        /// Specifies whether the input script is disabled.
        /// </summary>
        [Output("disabled")]
        public Output<bool> Disabled { get; private set; } = null!;

        /// <summary>
        /// Sets the host for events from this input. Defaults to whatever host sent the event.
        /// </summary>
        [Output("host")]
        public Output<string> Host { get; private set; } = null!;

        /// <summary>
        /// Sets the index for events from this input. Defaults to the main index.
        /// </summary>
        [Output("index")]
        public Output<string> Index { get; private set; } = null!;

        /// <summary>
        /// Specify an integer or cron schedule. This parameter specifies how often to execute the specified script, in seconds or a valid cron schedule. If you specify a cron schedule, the script is not executed on start-up.
        /// </summary>
        [Output("interval")]
        public Output<int> Interval { get; private set; } = null!;

        /// <summary>
        /// Specify the name of the scripted input.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// User to run the script as. If you provide a username, Splunk software generates an auth token for that user and passes it to the script.
        /// </summary>
        [Output("passauth")]
        public Output<string> Passauth { get; private set; } = null!;

        /// <summary>
        /// Specify a new name for the source field for the script.
        /// </summary>
        [Output("renameSource")]
        public Output<string> RenameSource { get; private set; } = null!;

        /// <summary>
        /// Sets the source key/field for events from this input. Defaults to the input file path.
        /// Sets the source key initial value. The key is used during parsing/indexing, in particular to set the source field during indexing. It is also the source field used at search time. As a convenience, the chosen string is prepended with 'source::'.
        /// </summary>
        [Output("source")]
        public Output<string> Source { get; private set; } = null!;

        /// <summary>
        /// Sets the sourcetype key/field for events from this input. If unset, Splunk software picks a source type based on various aspects of the data. As a convenience, the chosen string is prepended with 'sourcetype::'. There is no hard-coded default.
        /// Sets the sourcetype key initial value. The key is used during parsing/indexing, in particular to set the source type field during indexing. It is also the source type field used at search time.
        /// </summary>
        [Output("sourcetype")]
        public Output<string> Sourcetype { get; private set; } = null!;


        /// <summary>
        /// Create a InputsScript resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public InputsScript(string name, InputsScriptArgs args, CustomResourceOptions? options = null)
            : base("splunk:index/inputsScript:InputsScript", name, args ?? new InputsScriptArgs(), MakeResourceOptions(options, ""))
        {
        }

        private InputsScript(string name, Input<string> id, InputsScriptState? state = null, CustomResourceOptions? options = null)
            : base("splunk:index/inputsScript:InputsScript", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing InputsScript resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static InputsScript Get(string name, Input<string> id, InputsScriptState? state = null, CustomResourceOptions? options = null)
        {
            return new InputsScript(name, id, state, options);
        }
    }

    public sealed class InputsScriptArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The app/user context that is the namespace for the resource
        /// </summary>
        [Input("acl")]
        public Input<Inputs.InputsScriptAclArgs>? Acl { get; set; }

        /// <summary>
        /// Specifies whether the input script is disabled.
        /// </summary>
        [Input("disabled")]
        public Input<bool>? Disabled { get; set; }

        /// <summary>
        /// Sets the host for events from this input. Defaults to whatever host sent the event.
        /// </summary>
        [Input("host")]
        public Input<string>? Host { get; set; }

        /// <summary>
        /// Sets the index for events from this input. Defaults to the main index.
        /// </summary>
        [Input("index")]
        public Input<string>? Index { get; set; }

        /// <summary>
        /// Specify an integer or cron schedule. This parameter specifies how often to execute the specified script, in seconds or a valid cron schedule. If you specify a cron schedule, the script is not executed on start-up.
        /// </summary>
        [Input("interval", required: true)]
        public Input<int> Interval { get; set; } = null!;

        /// <summary>
        /// Specify the name of the scripted input.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// User to run the script as. If you provide a username, Splunk software generates an auth token for that user and passes it to the script.
        /// </summary>
        [Input("passauth")]
        public Input<string>? Passauth { get; set; }

        /// <summary>
        /// Specify a new name for the source field for the script.
        /// </summary>
        [Input("renameSource")]
        public Input<string>? RenameSource { get; set; }

        /// <summary>
        /// Sets the source key/field for events from this input. Defaults to the input file path.
        /// Sets the source key initial value. The key is used during parsing/indexing, in particular to set the source field during indexing. It is also the source field used at search time. As a convenience, the chosen string is prepended with 'source::'.
        /// </summary>
        [Input("source")]
        public Input<string>? Source { get; set; }

        /// <summary>
        /// Sets the sourcetype key/field for events from this input. If unset, Splunk software picks a source type based on various aspects of the data. As a convenience, the chosen string is prepended with 'sourcetype::'. There is no hard-coded default.
        /// Sets the sourcetype key initial value. The key is used during parsing/indexing, in particular to set the source type field during indexing. It is also the source type field used at search time.
        /// </summary>
        [Input("sourcetype")]
        public Input<string>? Sourcetype { get; set; }

        public InputsScriptArgs()
        {
        }
    }

    public sealed class InputsScriptState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The app/user context that is the namespace for the resource
        /// </summary>
        [Input("acl")]
        public Input<Inputs.InputsScriptAclGetArgs>? Acl { get; set; }

        /// <summary>
        /// Specifies whether the input script is disabled.
        /// </summary>
        [Input("disabled")]
        public Input<bool>? Disabled { get; set; }

        /// <summary>
        /// Sets the host for events from this input. Defaults to whatever host sent the event.
        /// </summary>
        [Input("host")]
        public Input<string>? Host { get; set; }

        /// <summary>
        /// Sets the index for events from this input. Defaults to the main index.
        /// </summary>
        [Input("index")]
        public Input<string>? Index { get; set; }

        /// <summary>
        /// Specify an integer or cron schedule. This parameter specifies how often to execute the specified script, in seconds or a valid cron schedule. If you specify a cron schedule, the script is not executed on start-up.
        /// </summary>
        [Input("interval")]
        public Input<int>? Interval { get; set; }

        /// <summary>
        /// Specify the name of the scripted input.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// User to run the script as. If you provide a username, Splunk software generates an auth token for that user and passes it to the script.
        /// </summary>
        [Input("passauth")]
        public Input<string>? Passauth { get; set; }

        /// <summary>
        /// Specify a new name for the source field for the script.
        /// </summary>
        [Input("renameSource")]
        public Input<string>? RenameSource { get; set; }

        /// <summary>
        /// Sets the source key/field for events from this input. Defaults to the input file path.
        /// Sets the source key initial value. The key is used during parsing/indexing, in particular to set the source field during indexing. It is also the source field used at search time. As a convenience, the chosen string is prepended with 'source::'.
        /// </summary>
        [Input("source")]
        public Input<string>? Source { get; set; }

        /// <summary>
        /// Sets the sourcetype key/field for events from this input. If unset, Splunk software picks a source type based on various aspects of the data. As a convenience, the chosen string is prepended with 'sourcetype::'. There is no hard-coded default.
        /// Sets the sourcetype key initial value. The key is used during parsing/indexing, in particular to set the source type field during indexing. It is also the source type field used at search time.
        /// </summary>
        [Input("sourcetype")]
        public Input<string>? Sourcetype { get; set; }

        public InputsScriptState()
        {
        }
    }
}
