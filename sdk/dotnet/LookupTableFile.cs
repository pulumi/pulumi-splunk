// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Splunk
{
    /// <summary>
    /// ## # Resource: splunk.LookupTableFile
    /// 
    /// Create and manage lookup table files.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Splunk = Pulumi.Splunk;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var lookupTableFile = new Splunk.LookupTableFile("lookup_table_file", new()
    ///     {
    ///         App = "search",
    ///         Owner = "nobody",
    ///         FileName = "lookup.csv",
    ///         FileContents = new[]
    ///         {
    ///             new[]
    ///             {
    ///                 "status",
    ///                 "status_description",
    ///                 "status_type",
    ///             },
    ///             new[]
    ///             {
    ///                 "100",
    ///                 "Continue",
    ///                 "Informational",
    ///             },
    ///             new[]
    ///             {
    ///                 "101",
    ///                 "Switching Protocols",
    ///                 "Informational",
    ///             },
    ///             new[]
    ///             {
    ///                 "200",
    ///                 "OK",
    ///                 "Successful",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [SplunkResourceType("splunk:index/lookupTableFile:LookupTableFile")]
    public partial class LookupTableFile : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The app context for the resource.
        /// </summary>
        [Output("app")]
        public Output<string> App { get; private set; } = null!;

        /// <summary>
        /// The column header and row value contents for the lookup table file.
        /// </summary>
        [Output("fileContents")]
        public Output<ImmutableArray<ImmutableArray<string>>> FileContents { get; private set; } = null!;

        /// <summary>
        /// A name for the lookup table file. Generally ends with ".csv"
        /// </summary>
        [Output("fileName")]
        public Output<string> FileName { get; private set; } = null!;

        /// <summary>
        /// User name of resource owner. Defaults to the resource creator. Required for updating any knowledge object ACL properties. nobody = All users may access the resource, but write access to the resource might be restricted.
        /// </summary>
        [Output("owner")]
        public Output<string> Owner { get; private set; } = null!;


        /// <summary>
        /// Create a LookupTableFile resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LookupTableFile(string name, LookupTableFileArgs args, CustomResourceOptions? options = null)
            : base("splunk:index/lookupTableFile:LookupTableFile", name, args ?? new LookupTableFileArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LookupTableFile(string name, Input<string> id, LookupTableFileState? state = null, CustomResourceOptions? options = null)
            : base("splunk:index/lookupTableFile:LookupTableFile", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LookupTableFile resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LookupTableFile Get(string name, Input<string> id, LookupTableFileState? state = null, CustomResourceOptions? options = null)
        {
            return new LookupTableFile(name, id, state, options);
        }
    }

    public sealed class LookupTableFileArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The app context for the resource.
        /// </summary>
        [Input("app", required: true)]
        public Input<string> App { get; set; } = null!;

        [Input("fileContents", required: true)]
        private InputList<ImmutableArray<string>>? _fileContents;

        /// <summary>
        /// The column header and row value contents for the lookup table file.
        /// </summary>
        public InputList<ImmutableArray<string>> FileContents
        {
            get => _fileContents ?? (_fileContents = new InputList<ImmutableArray<string>>());
            set => _fileContents = value;
        }

        /// <summary>
        /// A name for the lookup table file. Generally ends with ".csv"
        /// </summary>
        [Input("fileName", required: true)]
        public Input<string> FileName { get; set; } = null!;

        /// <summary>
        /// User name of resource owner. Defaults to the resource creator. Required for updating any knowledge object ACL properties. nobody = All users may access the resource, but write access to the resource might be restricted.
        /// </summary>
        [Input("owner", required: true)]
        public Input<string> Owner { get; set; } = null!;

        public LookupTableFileArgs()
        {
        }
        public static new LookupTableFileArgs Empty => new LookupTableFileArgs();
    }

    public sealed class LookupTableFileState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The app context for the resource.
        /// </summary>
        [Input("app")]
        public Input<string>? App { get; set; }

        [Input("fileContents")]
        private InputList<ImmutableArray<string>>? _fileContents;

        /// <summary>
        /// The column header and row value contents for the lookup table file.
        /// </summary>
        public InputList<ImmutableArray<string>> FileContents
        {
            get => _fileContents ?? (_fileContents = new InputList<ImmutableArray<string>>());
            set => _fileContents = value;
        }

        /// <summary>
        /// A name for the lookup table file. Generally ends with ".csv"
        /// </summary>
        [Input("fileName")]
        public Input<string>? FileName { get; set; }

        /// <summary>
        /// User name of resource owner. Defaults to the resource creator. Required for updating any knowledge object ACL properties. nobody = All users may access the resource, but write access to the resource might be restricted.
        /// </summary>
        [Input("owner")]
        public Input<string>? Owner { get; set; }

        public LookupTableFileState()
        {
        }
        public static new LookupTableFileState Empty => new LookupTableFileState();
    }
}
