// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## # Resource: splunk.GlobalHttpEventCollector
 *
 * Update Global HTTP Event Collector input configuration.
 */
export class GlobalHttpEventCollector extends pulumi.CustomResource {
    /**
     * Get an existing GlobalHttpEventCollector resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GlobalHttpEventCollectorState, opts?: pulumi.CustomResourceOptions): GlobalHttpEventCollector {
        return new GlobalHttpEventCollector(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'splunk:index/globalHttpEventCollector:GlobalHttpEventCollector';

    /**
     * Returns true if the given object is an instance of GlobalHttpEventCollector.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GlobalHttpEventCollector {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GlobalHttpEventCollector.__pulumiType;
    }

    /**
     * Number of threads used by HTTP Input server.
     */
    public readonly dedicatedIoThreads!: pulumi.Output<number>;
    /**
     * Input disabled indicator.
     */
    public readonly disabled!: pulumi.Output<boolean>;
    /**
     * Enable SSL protocol for HTTP data input. `true` = SSL enabled, `false` = SSL disabled.
     */
    public readonly enableSsl!: pulumi.Output<boolean>;
    /**
     * Maximum number of simultaneous HTTP connections accepted. Adjusting this value may cause server performance issues and is not generally recommended. Possible values for this setting vary by OS.
     */
    public readonly maxSockets!: pulumi.Output<number>;
    /**
     * Maximum number of threads that can be used by active HTTP transactions. Adjusting this value may cause server performance issues and is not generally recommended. Possible values for this setting vary by OS.
     */
    public readonly maxThreads!: pulumi.Output<number>;
    /**
     * HTTP data input IP port.
     */
    public readonly port!: pulumi.Output<number>;
    /**
     * Indicates whether the event collector input writes its configuration to a deployment server repository. When this setting is set to 1 (enabled), the input writes its configuration to the directory specified as repositoryLocation in serverclass.conf.
     * Copy the full contents of the splunkHttpinput app directory to this directory for the configuration to work. When enabled, only the tokens defined in the splunkHttpinput app in this repository are viewable and editable on the API and the Data Inputs page in Splunk Web. When disabled, the input writes its configuration to $SPLUNK_HOME/etc/apps by default. Defaults to 0 (disabled).
     */
    public readonly useDeploymentServer!: pulumi.Output<number>;

    /**
     * Create a GlobalHttpEventCollector resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: GlobalHttpEventCollectorArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GlobalHttpEventCollectorArgs | GlobalHttpEventCollectorState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GlobalHttpEventCollectorState | undefined;
            resourceInputs["dedicatedIoThreads"] = state ? state.dedicatedIoThreads : undefined;
            resourceInputs["disabled"] = state ? state.disabled : undefined;
            resourceInputs["enableSsl"] = state ? state.enableSsl : undefined;
            resourceInputs["maxSockets"] = state ? state.maxSockets : undefined;
            resourceInputs["maxThreads"] = state ? state.maxThreads : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["useDeploymentServer"] = state ? state.useDeploymentServer : undefined;
        } else {
            const args = argsOrState as GlobalHttpEventCollectorArgs | undefined;
            resourceInputs["dedicatedIoThreads"] = args ? args.dedicatedIoThreads : undefined;
            resourceInputs["disabled"] = args ? args.disabled : undefined;
            resourceInputs["enableSsl"] = args ? args.enableSsl : undefined;
            resourceInputs["maxSockets"] = args ? args.maxSockets : undefined;
            resourceInputs["maxThreads"] = args ? args.maxThreads : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["useDeploymentServer"] = args ? args.useDeploymentServer : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GlobalHttpEventCollector.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering GlobalHttpEventCollector resources.
 */
export interface GlobalHttpEventCollectorState {
    /**
     * Number of threads used by HTTP Input server.
     */
    dedicatedIoThreads?: pulumi.Input<number>;
    /**
     * Input disabled indicator.
     */
    disabled?: pulumi.Input<boolean>;
    /**
     * Enable SSL protocol for HTTP data input. `true` = SSL enabled, `false` = SSL disabled.
     */
    enableSsl?: pulumi.Input<boolean>;
    /**
     * Maximum number of simultaneous HTTP connections accepted. Adjusting this value may cause server performance issues and is not generally recommended. Possible values for this setting vary by OS.
     */
    maxSockets?: pulumi.Input<number>;
    /**
     * Maximum number of threads that can be used by active HTTP transactions. Adjusting this value may cause server performance issues and is not generally recommended. Possible values for this setting vary by OS.
     */
    maxThreads?: pulumi.Input<number>;
    /**
     * HTTP data input IP port.
     */
    port?: pulumi.Input<number>;
    /**
     * Indicates whether the event collector input writes its configuration to a deployment server repository. When this setting is set to 1 (enabled), the input writes its configuration to the directory specified as repositoryLocation in serverclass.conf.
     * Copy the full contents of the splunkHttpinput app directory to this directory for the configuration to work. When enabled, only the tokens defined in the splunkHttpinput app in this repository are viewable and editable on the API and the Data Inputs page in Splunk Web. When disabled, the input writes its configuration to $SPLUNK_HOME/etc/apps by default. Defaults to 0 (disabled).
     */
    useDeploymentServer?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a GlobalHttpEventCollector resource.
 */
export interface GlobalHttpEventCollectorArgs {
    /**
     * Number of threads used by HTTP Input server.
     */
    dedicatedIoThreads?: pulumi.Input<number>;
    /**
     * Input disabled indicator.
     */
    disabled?: pulumi.Input<boolean>;
    /**
     * Enable SSL protocol for HTTP data input. `true` = SSL enabled, `false` = SSL disabled.
     */
    enableSsl?: pulumi.Input<boolean>;
    /**
     * Maximum number of simultaneous HTTP connections accepted. Adjusting this value may cause server performance issues and is not generally recommended. Possible values for this setting vary by OS.
     */
    maxSockets?: pulumi.Input<number>;
    /**
     * Maximum number of threads that can be used by active HTTP transactions. Adjusting this value may cause server performance issues and is not generally recommended. Possible values for this setting vary by OS.
     */
    maxThreads?: pulumi.Input<number>;
    /**
     * HTTP data input IP port.
     */
    port?: pulumi.Input<number>;
    /**
     * Indicates whether the event collector input writes its configuration to a deployment server repository. When this setting is set to 1 (enabled), the input writes its configuration to the directory specified as repositoryLocation in serverclass.conf.
     * Copy the full contents of the splunkHttpinput app directory to this directory for the configuration to work. When enabled, only the tokens defined in the splunkHttpinput app in this repository are viewable and editable on the API and the Data Inputs page in Splunk Web. When disabled, the input writes its configuration to $SPLUNK_HOME/etc/apps by default. Defaults to 0 (disabled).
     */
    useDeploymentServer?: pulumi.Input<number>;
}
