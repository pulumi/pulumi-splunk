// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.splunk;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.splunk.LookupTableFileArgs;
import com.pulumi.splunk.Utilities;
import com.pulumi.splunk.inputs.LookupTableFileState;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * ## # Resource: splunk.LookupTableFile
 * 
 * Create and manage lookup table files.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.splunk.LookupTableFile;
 * import com.pulumi.splunk.LookupTableFileArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var lookupTableFile = new LookupTableFile("lookupTableFile", LookupTableFileArgs.builder()
 *             .app("search")
 *             .owner("nobody")
 *             .fileName("lookup.csv")
 *             .fileContents(            
 *                                 
 *                     "status",
 *                     "status_description",
 *                     "status_type",
 *                                 
 *                     "100",
 *                     "Continue",
 *                     "Informational",
 *                                 
 *                     "101",
 *                     "Switching Protocols",
 *                     "Informational",
 *                                 
 *                     "200",
 *                     "OK",
 *                     "Successful")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="splunk:index/lookupTableFile:LookupTableFile")
public class LookupTableFile extends com.pulumi.resources.CustomResource {
    /**
     * The app context for the resource.
     * 
     */
    @Export(name="app", refs={String.class}, tree="[0]")
    private Output<String> app;

    /**
     * @return The app context for the resource.
     * 
     */
    public Output<String> app() {
        return this.app;
    }
    /**
     * The column header and row value contents for the lookup table file.
     * 
     */
    @Export(name="fileContents", refs={List.class,String.class}, tree="[0,[0,1]]")
    private Output<List<List<String>>> fileContents;

    /**
     * @return The column header and row value contents for the lookup table file.
     * 
     */
    public Output<List<List<String>>> fileContents() {
        return this.fileContents;
    }
    /**
     * A name for the lookup table file. Generally ends with &#34;.csv&#34;
     * 
     */
    @Export(name="fileName", refs={String.class}, tree="[0]")
    private Output<String> fileName;

    /**
     * @return A name for the lookup table file. Generally ends with &#34;.csv&#34;
     * 
     */
    public Output<String> fileName() {
        return this.fileName;
    }
    /**
     * User name of resource owner. Defaults to the resource creator. Required for updating any knowledge object ACL properties. nobody = All users may access the resource, but write access to the resource might be restricted.
     * 
     */
    @Export(name="owner", refs={String.class}, tree="[0]")
    private Output<String> owner;

    /**
     * @return User name of resource owner. Defaults to the resource creator. Required for updating any knowledge object ACL properties. nobody = All users may access the resource, but write access to the resource might be restricted.
     * 
     */
    public Output<String> owner() {
        return this.owner;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public LookupTableFile(java.lang.String name) {
        this(name, LookupTableFileArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public LookupTableFile(java.lang.String name, LookupTableFileArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public LookupTableFile(java.lang.String name, LookupTableFileArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("splunk:index/lookupTableFile:LookupTableFile", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private LookupTableFile(java.lang.String name, Output<java.lang.String> id, @Nullable LookupTableFileState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("splunk:index/lookupTableFile:LookupTableFile", name, state, makeResourceOptions(options, id), false);
    }

    private static LookupTableFileArgs makeArgs(LookupTableFileArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? LookupTableFileArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static LookupTableFile get(java.lang.String name, Output<java.lang.String> id, @Nullable LookupTableFileState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new LookupTableFile(name, id, state, options);
    }
}
