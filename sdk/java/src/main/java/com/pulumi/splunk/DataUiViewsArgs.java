// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.splunk;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.splunk.inputs.DataUiViewsAclArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataUiViewsArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataUiViewsArgs Empty = new DataUiViewsArgs();

    @Import(name="acl")
    private @Nullable Output<DataUiViewsAclArgs> acl;

    public Optional<Output<DataUiViewsAclArgs>> acl() {
        return Optional.ofNullable(this.acl);
    }

    /**
     * Dashboard XML definition.
     * 
     */
    @Import(name="eaiData", required=true)
    private Output<String> eaiData;

    /**
     * @return Dashboard XML definition.
     * 
     */
    public Output<String> eaiData() {
        return this.eaiData;
    }

    /**
     * Dashboard name.
     * * `eai:data` - (Required) Dashboard XML definition.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Dashboard name.
     * * `eai:data` - (Required) Dashboard XML definition.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private DataUiViewsArgs() {}

    private DataUiViewsArgs(DataUiViewsArgs $) {
        this.acl = $.acl;
        this.eaiData = $.eaiData;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataUiViewsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataUiViewsArgs $;

        public Builder() {
            $ = new DataUiViewsArgs();
        }

        public Builder(DataUiViewsArgs defaults) {
            $ = new DataUiViewsArgs(Objects.requireNonNull(defaults));
        }

        public Builder acl(@Nullable Output<DataUiViewsAclArgs> acl) {
            $.acl = acl;
            return this;
        }

        public Builder acl(DataUiViewsAclArgs acl) {
            return acl(Output.of(acl));
        }

        /**
         * @param eaiData Dashboard XML definition.
         * 
         * @return builder
         * 
         */
        public Builder eaiData(Output<String> eaiData) {
            $.eaiData = eaiData;
            return this;
        }

        /**
         * @param eaiData Dashboard XML definition.
         * 
         * @return builder
         * 
         */
        public Builder eaiData(String eaiData) {
            return eaiData(Output.of(eaiData));
        }

        /**
         * @param name Dashboard name.
         * * `eai:data` - (Required) Dashboard XML definition.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Dashboard name.
         * * `eai:data` - (Required) Dashboard XML definition.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public DataUiViewsArgs build() {
            if ($.eaiData == null) {
                throw new MissingRequiredPropertyException("DataUiViewsArgs", "eaiData");
            }
            return $;
        }
    }

}
