// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.splunk;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.splunk.inputs.ConfigsConfAclArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConfigsConfArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConfigsConfArgs Empty = new ConfigsConfArgs();

    @Import(name="acl")
    private @Nullable Output<ConfigsConfAclArgs> acl;

    public Optional<Output<ConfigsConfAclArgs>> acl() {
        return Optional.ofNullable(this.acl);
    }

    /**
     * A &#39;/&#39; separated string consisting of {conf_file_name}/{stanza_name} ex. props/custom_stanza
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return A &#39;/&#39; separated string consisting of {conf_file_name}/{stanza_name} ex. props/custom_stanza
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A map of key value pairs for a stanza.
     * 
     */
    @Import(name="variables")
    private @Nullable Output<Map<String,String>> variables;

    /**
     * @return A map of key value pairs for a stanza.
     * 
     */
    public Optional<Output<Map<String,String>>> variables() {
        return Optional.ofNullable(this.variables);
    }

    private ConfigsConfArgs() {}

    private ConfigsConfArgs(ConfigsConfArgs $) {
        this.acl = $.acl;
        this.name = $.name;
        this.variables = $.variables;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConfigsConfArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConfigsConfArgs $;

        public Builder() {
            $ = new ConfigsConfArgs();
        }

        public Builder(ConfigsConfArgs defaults) {
            $ = new ConfigsConfArgs(Objects.requireNonNull(defaults));
        }

        public Builder acl(@Nullable Output<ConfigsConfAclArgs> acl) {
            $.acl = acl;
            return this;
        }

        public Builder acl(ConfigsConfAclArgs acl) {
            return acl(Output.of(acl));
        }

        /**
         * @param name A &#39;/&#39; separated string consisting of {conf_file_name}/{stanza_name} ex. props/custom_stanza
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name A &#39;/&#39; separated string consisting of {conf_file_name}/{stanza_name} ex. props/custom_stanza
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param variables A map of key value pairs for a stanza.
         * 
         * @return builder
         * 
         */
        public Builder variables(@Nullable Output<Map<String,String>> variables) {
            $.variables = variables;
            return this;
        }

        /**
         * @param variables A map of key value pairs for a stanza.
         * 
         * @return builder
         * 
         */
        public Builder variables(Map<String,String> variables) {
            return variables(Output.of(variables));
        }

        public ConfigsConfArgs build() {
            return $;
        }
    }

}
