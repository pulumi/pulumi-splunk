// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.splunk;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.splunk.DataUiViewsArgs;
import com.pulumi.splunk.Utilities;
import com.pulumi.splunk.inputs.DataUiViewsState;
import com.pulumi.splunk.outputs.DataUiViewsAcl;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * ## # Resource: splunk.DataUiViews
 * 
 * Create and manage splunk dashboards/views.
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.splunk.DataUiViews;
 * import com.pulumi.splunk.DataUiViewsArgs;
 * import com.pulumi.splunk.inputs.DataUiViewsAclArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var dashboard = new DataUiViews(&#34;dashboard&#34;, DataUiViewsArgs.builder()        
 *             .acl(DataUiViewsAclArgs.builder()
 *                 .app(&#34;search&#34;)
 *                 .owner(&#34;admin&#34;)
 *                 .build())
 *             .eaiData(&#34;&lt;dashboard version=\&#34;1.1\&#34;&gt;&lt;label&gt;Terraform&lt;/label&gt;&lt;description&gt;Terraform operations&lt;/description&gt;&lt;row&gt;&lt;panel&gt;&lt;chart&gt;&lt;search&gt;&lt;query&gt;index=_internal sourcetype=splunkd_access useragent=\&#34;splunk-simple-go-client\&#34; | timechart fixedrange=f values(status) by uri_path&lt;/query&gt;&lt;earliest&gt;-24h@h&lt;/earliest&gt;&lt;latest&gt;now&lt;/latest&gt;&lt;sampleRatio&gt;1&lt;/sampleRatio&gt;&lt;/search&gt;&lt;option name=\&#34;charting.axisLabelsX.majorLabelStyle.overflowMode\&#34;&gt;ellipsisNone&lt;/option&gt;&lt;option name=\&#34;charting.axisLabelsX.majorLabelStyle.rotation\&#34;&gt;0&lt;/option&gt;&lt;option name=\&#34;charting.axisTitleX.visibility\&#34;&gt;collapsed&lt;/option&gt;&lt;option name=\&#34;charting.axisTitleY.text\&#34;&gt;HTTP status codes&lt;/option&gt;&lt;option name=\&#34;charting.axisTitleY.visibility\&#34;&gt;visible&lt;/option&gt;&lt;option name=\&#34;charting.axisTitleY2.visibility\&#34;&gt;visible&lt;/option&gt;&lt;option name=\&#34;charting.axisX.abbreviation\&#34;&gt;none&lt;/option&gt;&lt;option name=\&#34;charting.axisX.scale\&#34;&gt;linear&lt;/option&gt;&lt;option name=\&#34;charting.axisY.abbreviation\&#34;&gt;none&lt;/option&gt;&lt;option name=\&#34;charting.axisY.scale\&#34;&gt;linear&lt;/option&gt;&lt;option name=\&#34;charting.axisY2.abbreviation\&#34;&gt;none&lt;/option&gt;&lt;option name=\&#34;charting.axisY2.enabled\&#34;&gt;0&lt;/option&gt;&lt;option name=\&#34;charting.axisY2.scale\&#34;&gt;inherit&lt;/option&gt;&lt;option name=\&#34;charting.chart\&#34;&gt;column&lt;/option&gt;&lt;option name=\&#34;charting.chart.bubbleMaximumSize\&#34;&gt;50&lt;/option&gt;&lt;option name=\&#34;charting.chart.bubbleMinimumSize\&#34;&gt;10&lt;/option&gt;&lt;option name=\&#34;charting.chart.bubbleSizeBy\&#34;&gt;area&lt;/option&gt;&lt;option name=\&#34;charting.chart.nullValueMode\&#34;&gt;connect&lt;/option&gt;&lt;option name=\&#34;charting.chart.showDataLabels\&#34;&gt;none&lt;/option&gt;&lt;option name=\&#34;charting.chart.sliceCollapsingThreshold\&#34;&gt;0.01&lt;/option&gt;&lt;option name=\&#34;charting.chart.stackMode\&#34;&gt;default&lt;/option&gt;&lt;option name=\&#34;charting.chart.style\&#34;&gt;shiny&lt;/option&gt;&lt;option name=\&#34;charting.drilldown\&#34;&gt;none&lt;/option&gt;&lt;option name=\&#34;charting.layout.splitSeries\&#34;&gt;0&lt;/option&gt;&lt;option name=\&#34;charting.layout.splitSeries.allowIndependentYRanges\&#34;&gt;0&lt;/option&gt;&lt;option name=\&#34;charting.legend.labelStyle.overflowMode\&#34;&gt;ellipsisMiddle&lt;/option&gt;&lt;option name=\&#34;charting.legend.mode\&#34;&gt;standard&lt;/option&gt;&lt;option name=\&#34;charting.legend.placement\&#34;&gt;right&lt;/option&gt;&lt;option name=\&#34;charting.lineWidth\&#34;&gt;2&lt;/option&gt;&lt;option name=\&#34;trellis.enabled\&#34;&gt;0&lt;/option&gt;&lt;option name=\&#34;trellis.scales.shared\&#34;&gt;1&lt;/option&gt;&lt;option name=\&#34;trellis.size\&#34;&gt;small&lt;/option&gt;&lt;option name=\&#34;trellis.splitBy\&#34;&gt;_aggregation&lt;/option&gt;&lt;/chart&gt;&lt;/panel&gt;&lt;/row&gt;&lt;/dashboard&gt;&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 */
@ResourceType(type="splunk:index/dataUiViews:DataUiViews")
public class DataUiViews extends com.pulumi.resources.CustomResource {
    @Export(name="acl", type=DataUiViewsAcl.class, parameters={})
    private Output<DataUiViewsAcl> acl;

    public Output<DataUiViewsAcl> acl() {
        return this.acl;
    }
    /**
     * Dashboard XML definition.
     * 
     */
    @Export(name="eaiData", type=String.class, parameters={})
    private Output<String> eaiData;

    /**
     * @return Dashboard XML definition.
     * 
     */
    public Output<String> eaiData() {
        return this.eaiData;
    }
    /**
     * Dashboard name.
     * * `eai:data` - (Required) Dashboard XML definition.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Dashboard name.
     * * `eai:data` - (Required) Dashboard XML definition.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DataUiViews(String name) {
        this(name, DataUiViewsArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DataUiViews(String name, DataUiViewsArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DataUiViews(String name, DataUiViewsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("splunk:index/dataUiViews:DataUiViews", name, args == null ? DataUiViewsArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private DataUiViews(String name, Output<String> id, @Nullable DataUiViewsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("splunk:index/dataUiViews:DataUiViews", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DataUiViews get(String name, Output<String> id, @Nullable DataUiViewsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DataUiViews(name, id, state, options);
    }
}
