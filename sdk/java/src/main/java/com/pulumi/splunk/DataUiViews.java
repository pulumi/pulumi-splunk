// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.splunk;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.splunk.DataUiViewsArgs;
import com.pulumi.splunk.Utilities;
import com.pulumi.splunk.inputs.DataUiViewsState;
import com.pulumi.splunk.outputs.DataUiViewsAcl;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * ## # Resource: splunk.DataUiViews
 * 
 * Create and manage splunk dashboards/views.
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.splunk.DataUiViews;
 * import com.pulumi.splunk.DataUiViewsArgs;
 * import com.pulumi.splunk.inputs.DataUiViewsAclArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         var dashboard = new DataUiViews("dashboard", DataUiViewsArgs.builder()
 *             .name("Terraform_Sample_Dashboard")
 *             .eaiData("<dashboard version=\"1.1\"><label>Terraform</label><description>Terraform operations</description><row><panel><chart><search><query>index=_internal sourcetype=splunkd_access useragent=\"splunk-simple-go-client\" | timechart fixedrange=f values(status) by uri_path</query><earliest>-24h}{@literal @}{@code h</earliest><latest>now</latest><sampleRatio>1</sampleRatio></search><option name=\"charting.axisLabelsX.majorLabelStyle.overflowMode\">ellipsisNone</option><option name=\"charting.axisLabelsX.majorLabelStyle.rotation\">0</option><option name=\"charting.axisTitleX.visibility\">collapsed</option><option name=\"charting.axisTitleY.text\">HTTP status codes</option><option name=\"charting.axisTitleY.visibility\">visible</option><option name=\"charting.axisTitleY2.visibility\">visible</option><option name=\"charting.axisX.abbreviation\">none</option><option name=\"charting.axisX.scale\">linear</option><option name=\"charting.axisY.abbreviation\">none</option><option name=\"charting.axisY.scale\">linear</option><option name=\"charting.axisY2.abbreviation\">none</option><option name=\"charting.axisY2.enabled\">0</option><option name=\"charting.axisY2.scale\">inherit</option><option name=\"charting.chart\">column</option><option name=\"charting.chart.bubbleMaximumSize\">50</option><option name=\"charting.chart.bubbleMinimumSize\">10</option><option name=\"charting.chart.bubbleSizeBy\">area</option><option name=\"charting.chart.nullValueMode\">connect</option><option name=\"charting.chart.showDataLabels\">none</option><option name=\"charting.chart.sliceCollapsingThreshold\">0.01</option><option name=\"charting.chart.stackMode\">default</option><option name=\"charting.chart.style\">shiny</option><option name=\"charting.drilldown\">none</option><option name=\"charting.layout.splitSeries\">0</option><option name=\"charting.layout.splitSeries.allowIndependentYRanges\">0</option><option name=\"charting.legend.labelStyle.overflowMode\">ellipsisMiddle</option><option name=\"charting.legend.mode\">standard</option><option name=\"charting.legend.placement\">right</option><option name=\"charting.lineWidth\">2</option><option name=\"trellis.enabled\">0</option><option name=\"trellis.scales.shared\">1</option><option name=\"trellis.size\">small</option><option name=\"trellis.splitBy\">_aggregation</option></chart></panel></row></dashboard>")
 *             .acl(DataUiViewsAclArgs.builder()
 *                 .owner("admin")
 *                 .app("search")
 *                 .build())
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="splunk:index/dataUiViews:DataUiViews")
public class DataUiViews extends com.pulumi.resources.CustomResource {
    @Export(name="acl", refs={DataUiViewsAcl.class}, tree="[0]")
    private Output<DataUiViewsAcl> acl;

    public Output<DataUiViewsAcl> acl() {
        return this.acl;
    }
    /**
     * Dashboard XML definition.
     * 
     */
    @Export(name="eaiData", refs={String.class}, tree="[0]")
    private Output<String> eaiData;

    /**
     * @return Dashboard XML definition.
     * 
     */
    public Output<String> eaiData() {
        return this.eaiData;
    }
    /**
     * Dashboard name.
     * * `eai:data` - (Required) Dashboard XML definition.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Dashboard name.
     * * `eai:data` - (Required) Dashboard XML definition.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DataUiViews(java.lang.String name) {
        this(name, DataUiViewsArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DataUiViews(java.lang.String name, DataUiViewsArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DataUiViews(java.lang.String name, DataUiViewsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("splunk:index/dataUiViews:DataUiViews", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private DataUiViews(java.lang.String name, Output<java.lang.String> id, @Nullable DataUiViewsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("splunk:index/dataUiViews:DataUiViews", name, state, makeResourceOptions(options, id), false);
    }

    private static DataUiViewsArgs makeArgs(DataUiViewsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? DataUiViewsArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DataUiViews get(java.lang.String name, Output<java.lang.String> id, @Nullable DataUiViewsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DataUiViews(name, id, state, options);
    }
}
