// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.splunk;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.splunk.AuthorizationRolesArgs;
import com.pulumi.splunk.Utilities;
import com.pulumi.splunk.inputs.AuthorizationRolesState;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## # Resource: splunk.AuthorizationRoles
 * 
 * Create and update role information.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.splunk.AuthorizationRoles;
 * import com.pulumi.splunk.AuthorizationRolesArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var role01 = new AuthorizationRoles("role01", AuthorizationRolesArgs.builder()        
 *             .name("terraform-user01-role")
 *             .defaultApp("search")
 *             .importedRoles(            
 *                 "power",
 *                 "user")
 *             .capabilities(            
 *                 "accelerate_datamodel",
 *                 "change_authentication",
 *                 "restart_splunkd")
 *             .searchIndexesAlloweds(            
 *                 "_audit",
 *                 "_internal",
 *                 "main")
 *             .searchIndexesDefaults(            
 *                 "_audit",
 *                 "_internal",
 *                 "main")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="splunk:index/authorizationRoles:AuthorizationRoles")
public class AuthorizationRoles extends com.pulumi.resources.CustomResource {
    /**
     * List of capabilities assigned to role.
     * 
     */
    @Export(name="capabilities", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> capabilities;

    /**
     * @return List of capabilities assigned to role.
     * 
     */
    public Output<List<String>> capabilities() {
        return this.capabilities;
    }
    /**
     * Maximum number of concurrently running real-time searches that all members of this role can have.
     * 
     */
    @Export(name="cumulativeRealtimeSearchJobsQuota", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> cumulativeRealtimeSearchJobsQuota;

    /**
     * @return Maximum number of concurrently running real-time searches that all members of this role can have.
     * 
     */
    public Output<Optional<Integer>> cumulativeRealtimeSearchJobsQuota() {
        return Codegen.optional(this.cumulativeRealtimeSearchJobsQuota);
    }
    /**
     * Maximum number of concurrently running searches for all role members. Warning message logged when limit is reached.
     * 
     */
    @Export(name="cumulativeSearchJobsQuota", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> cumulativeSearchJobsQuota;

    /**
     * @return Maximum number of concurrently running searches for all role members. Warning message logged when limit is reached.
     * 
     */
    public Output<Optional<Integer>> cumulativeSearchJobsQuota() {
        return Codegen.optional(this.cumulativeSearchJobsQuota);
    }
    /**
     * Specify the folder name of the default app to use for this role. A user-specific default app overrides this.
     * 
     */
    @Export(name="defaultApp", refs={String.class}, tree="[0]")
    private Output<String> defaultApp;

    /**
     * @return Specify the folder name of the default app to use for this role. A user-specific default app overrides this.
     * 
     */
    public Output<String> defaultApp() {
        return this.defaultApp;
    }
    /**
     * List of imported roles for this role. &lt;br&gt;Importing other roles imports all aspects of that role, such as capabilities and allowed indexes to search. In combining multiple roles, the effective value for each attribute is value with the broadest permissions.
     * 
     */
    @Export(name="importedRoles", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> importedRoles;

    /**
     * @return List of imported roles for this role. &lt;br&gt;Importing other roles imports all aspects of that role, such as capabilities and allowed indexes to search. In combining multiple roles, the effective value for each attribute is value with the broadest permissions.
     * 
     */
    public Output<List<String>> importedRoles() {
        return this.importedRoles;
    }
    /**
     * The name of the user role to create.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the user role to create.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Specify the maximum number of concurrent real-time search jobs for this role. This count is independent from the normal search jobs limit.
     * 
     */
    @Export(name="realtimeSearchJobsQuota", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> realtimeSearchJobsQuota;

    /**
     * @return Specify the maximum number of concurrent real-time search jobs for this role. This count is independent from the normal search jobs limit.
     * 
     */
    public Output<Optional<Integer>> realtimeSearchJobsQuota() {
        return Codegen.optional(this.realtimeSearchJobsQuota);
    }
    /**
     * Specifies the maximum disk space in MB that can be used by a user&#39;s search jobs. For example, a value of 100 limits this role to 100 MB total.
     * 
     */
    @Export(name="searchDiskQuota", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> searchDiskQuota;

    /**
     * @return Specifies the maximum disk space in MB that can be used by a user&#39;s search jobs. For example, a value of 100 limits this role to 100 MB total.
     * 
     */
    public Output<Optional<Integer>> searchDiskQuota() {
        return Codegen.optional(this.searchDiskQuota);
    }
    /**
     * Specify a search string that restricts the scope of searches run by this role. Search results for this role only show events that also match the search string you specify. In the case that a user has multiple roles with different search filters, they are combined with an OR.
     * 
     */
    @Export(name="searchFilter", refs={String.class}, tree="[0]")
    private Output<String> searchFilter;

    /**
     * @return Specify a search string that restricts the scope of searches run by this role. Search results for this role only show events that also match the search string you specify. In the case that a user has multiple roles with different search filters, they are combined with an OR.
     * 
     */
    public Output<String> searchFilter() {
        return this.searchFilter;
    }
    /**
     * List of indexes that this role has permissions to search. These may be wildcarded, but the index name must begin with an underscore to match internal indexes.
     * 
     */
    @Export(name="searchIndexesAlloweds", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> searchIndexesAlloweds;

    /**
     * @return List of indexes that this role has permissions to search. These may be wildcarded, but the index name must begin with an underscore to match internal indexes.
     * 
     */
    public Output<List<String>> searchIndexesAlloweds() {
        return this.searchIndexesAlloweds;
    }
    /**
     * List of indexes to search when no index is specified. These indexes can be wildcarded, with the exception that &#39;*&#39; does not match internal indexes. To match internal indexes, start with &#39;_&#39;. All internal indexes are represented by &#39;_*&#39;. A user with this role can search other indexes using &#34;index= &#34;
     * 
     */
    @Export(name="searchIndexesDefaults", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> searchIndexesDefaults;

    /**
     * @return List of indexes to search when no index is specified. These indexes can be wildcarded, with the exception that &#39;*&#39; does not match internal indexes. To match internal indexes, start with &#39;_&#39;. All internal indexes are represented by &#39;_*&#39;. A user with this role can search other indexes using &#34;index= &#34;
     * 
     */
    public Output<List<String>> searchIndexesDefaults() {
        return this.searchIndexesDefaults;
    }
    /**
     * The maximum number of concurrent searches a user with this role is allowed to run. For users with multiple roles, the maximum quota value among all of the roles applies.
     * 
     */
    @Export(name="searchJobsQuota", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> searchJobsQuota;

    /**
     * @return The maximum number of concurrent searches a user with this role is allowed to run. For users with multiple roles, the maximum quota value among all of the roles applies.
     * 
     */
    public Output<Optional<Integer>> searchJobsQuota() {
        return Codegen.optional(this.searchJobsQuota);
    }
    /**
     * Maximum time span of a search, in seconds. By default, searches are not limited to any specific time window. To override any search time windows from imported roles, set srchTimeWin to &#39;0&#39;, as the &#39;admin&#39; role does.
     * 
     */
    @Export(name="searchTimeWin", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> searchTimeWin;

    /**
     * @return Maximum time span of a search, in seconds. By default, searches are not limited to any specific time window. To override any search time windows from imported roles, set srchTimeWin to &#39;0&#39;, as the &#39;admin&#39; role does.
     * 
     */
    public Output<Optional<Integer>> searchTimeWin() {
        return Codegen.optional(this.searchTimeWin);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AuthorizationRoles(String name) {
        this(name, AuthorizationRolesArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AuthorizationRoles(String name, @Nullable AuthorizationRolesArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AuthorizationRoles(String name, @Nullable AuthorizationRolesArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("splunk:index/authorizationRoles:AuthorizationRoles", name, args == null ? AuthorizationRolesArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private AuthorizationRoles(String name, Output<String> id, @Nullable AuthorizationRolesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("splunk:index/authorizationRoles:AuthorizationRoles", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AuthorizationRoles get(String name, Output<String> id, @Nullable AuthorizationRolesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AuthorizationRoles(name, id, state, options);
    }
}
