// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.splunk;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AdminSamlGroupsArgs extends com.pulumi.resources.ResourceArgs {

    public static final AdminSamlGroupsArgs Empty = new AdminSamlGroupsArgs();

    /**
     * The name of the external group.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the external group.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * List of internal roles assigned to the group.
     * 
     */
    @Import(name="roles")
    private @Nullable Output<List<String>> roles;

    /**
     * @return List of internal roles assigned to the group.
     * 
     */
    public Optional<Output<List<String>>> roles() {
        return Optional.ofNullable(this.roles);
    }

    private AdminSamlGroupsArgs() {}

    private AdminSamlGroupsArgs(AdminSamlGroupsArgs $) {
        this.name = $.name;
        this.roles = $.roles;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AdminSamlGroupsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AdminSamlGroupsArgs $;

        public Builder() {
            $ = new AdminSamlGroupsArgs();
        }

        public Builder(AdminSamlGroupsArgs defaults) {
            $ = new AdminSamlGroupsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name of the external group.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the external group.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param roles List of internal roles assigned to the group.
         * 
         * @return builder
         * 
         */
        public Builder roles(@Nullable Output<List<String>> roles) {
            $.roles = roles;
            return this;
        }

        /**
         * @param roles List of internal roles assigned to the group.
         * 
         * @return builder
         * 
         */
        public Builder roles(List<String> roles) {
            return roles(Output.of(roles));
        }

        /**
         * @param roles List of internal roles assigned to the group.
         * 
         * @return builder
         * 
         */
        public Builder roles(String... roles) {
            return roles(List.of(roles));
        }

        public AdminSamlGroupsArgs build() {
            return $;
        }
    }

}
