// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.splunk.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GlobalHttpEventCollectorState extends com.pulumi.resources.ResourceArgs {

    public static final GlobalHttpEventCollectorState Empty = new GlobalHttpEventCollectorState();

    /**
     * Number of threads used by HTTP Input server.
     * 
     */
    @Import(name="dedicatedIoThreads")
    private @Nullable Output<Integer> dedicatedIoThreads;

    /**
     * @return Number of threads used by HTTP Input server.
     * 
     */
    public Optional<Output<Integer>> dedicatedIoThreads() {
        return Optional.ofNullable(this.dedicatedIoThreads);
    }

    /**
     * Input disabled indicator.
     * 
     */
    @Import(name="disabled")
    private @Nullable Output<Boolean> disabled;

    /**
     * @return Input disabled indicator.
     * 
     */
    public Optional<Output<Boolean>> disabled() {
        return Optional.ofNullable(this.disabled);
    }

    /**
     * Enable SSL protocol for HTTP data input. `true` = SSL enabled, `false` = SSL disabled.
     * 
     */
    @Import(name="enableSsl")
    private @Nullable Output<Boolean> enableSsl;

    /**
     * @return Enable SSL protocol for HTTP data input. `true` = SSL enabled, `false` = SSL disabled.
     * 
     */
    public Optional<Output<Boolean>> enableSsl() {
        return Optional.ofNullable(this.enableSsl);
    }

    /**
     * Maximum number of simultaneous HTTP connections accepted. Adjusting this value may cause server performance issues and is not generally recommended. Possible values for this setting vary by OS.
     * 
     */
    @Import(name="maxSockets")
    private @Nullable Output<Integer> maxSockets;

    /**
     * @return Maximum number of simultaneous HTTP connections accepted. Adjusting this value may cause server performance issues and is not generally recommended. Possible values for this setting vary by OS.
     * 
     */
    public Optional<Output<Integer>> maxSockets() {
        return Optional.ofNullable(this.maxSockets);
    }

    /**
     * Maximum number of threads that can be used by active HTTP transactions. Adjusting this value may cause server performance issues and is not generally recommended. Possible values for this setting vary by OS.
     * 
     */
    @Import(name="maxThreads")
    private @Nullable Output<Integer> maxThreads;

    /**
     * @return Maximum number of threads that can be used by active HTTP transactions. Adjusting this value may cause server performance issues and is not generally recommended. Possible values for this setting vary by OS.
     * 
     */
    public Optional<Output<Integer>> maxThreads() {
        return Optional.ofNullable(this.maxThreads);
    }

    /**
     * HTTP data input IP port.
     * 
     */
    @Import(name="port")
    private @Nullable Output<Integer> port;

    /**
     * @return HTTP data input IP port.
     * 
     */
    public Optional<Output<Integer>> port() {
        return Optional.ofNullable(this.port);
    }

    /**
     * Indicates whether the event collector input writes its configuration to a deployment server repository. When this setting is set to 1 (enabled), the input writes its configuration to the directory specified as repositoryLocation in serverclass.conf.
     * Copy the full contents of the splunk_httpinput app directory to this directory for the configuration to work. When enabled, only the tokens defined in the splunk_httpinput app in this repository are viewable and editable on the API and the Data Inputs page in Splunk Web. When disabled, the input writes its configuration to $SPLUNK_HOME/etc/apps by default. Defaults to 0 (disabled).
     * 
     */
    @Import(name="useDeploymentServer")
    private @Nullable Output<Integer> useDeploymentServer;

    /**
     * @return Indicates whether the event collector input writes its configuration to a deployment server repository. When this setting is set to 1 (enabled), the input writes its configuration to the directory specified as repositoryLocation in serverclass.conf.
     * Copy the full contents of the splunk_httpinput app directory to this directory for the configuration to work. When enabled, only the tokens defined in the splunk_httpinput app in this repository are viewable and editable on the API and the Data Inputs page in Splunk Web. When disabled, the input writes its configuration to $SPLUNK_HOME/etc/apps by default. Defaults to 0 (disabled).
     * 
     */
    public Optional<Output<Integer>> useDeploymentServer() {
        return Optional.ofNullable(this.useDeploymentServer);
    }

    private GlobalHttpEventCollectorState() {}

    private GlobalHttpEventCollectorState(GlobalHttpEventCollectorState $) {
        this.dedicatedIoThreads = $.dedicatedIoThreads;
        this.disabled = $.disabled;
        this.enableSsl = $.enableSsl;
        this.maxSockets = $.maxSockets;
        this.maxThreads = $.maxThreads;
        this.port = $.port;
        this.useDeploymentServer = $.useDeploymentServer;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GlobalHttpEventCollectorState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GlobalHttpEventCollectorState $;

        public Builder() {
            $ = new GlobalHttpEventCollectorState();
        }

        public Builder(GlobalHttpEventCollectorState defaults) {
            $ = new GlobalHttpEventCollectorState(Objects.requireNonNull(defaults));
        }

        /**
         * @param dedicatedIoThreads Number of threads used by HTTP Input server.
         * 
         * @return builder
         * 
         */
        public Builder dedicatedIoThreads(@Nullable Output<Integer> dedicatedIoThreads) {
            $.dedicatedIoThreads = dedicatedIoThreads;
            return this;
        }

        /**
         * @param dedicatedIoThreads Number of threads used by HTTP Input server.
         * 
         * @return builder
         * 
         */
        public Builder dedicatedIoThreads(Integer dedicatedIoThreads) {
            return dedicatedIoThreads(Output.of(dedicatedIoThreads));
        }

        /**
         * @param disabled Input disabled indicator.
         * 
         * @return builder
         * 
         */
        public Builder disabled(@Nullable Output<Boolean> disabled) {
            $.disabled = disabled;
            return this;
        }

        /**
         * @param disabled Input disabled indicator.
         * 
         * @return builder
         * 
         */
        public Builder disabled(Boolean disabled) {
            return disabled(Output.of(disabled));
        }

        /**
         * @param enableSsl Enable SSL protocol for HTTP data input. `true` = SSL enabled, `false` = SSL disabled.
         * 
         * @return builder
         * 
         */
        public Builder enableSsl(@Nullable Output<Boolean> enableSsl) {
            $.enableSsl = enableSsl;
            return this;
        }

        /**
         * @param enableSsl Enable SSL protocol for HTTP data input. `true` = SSL enabled, `false` = SSL disabled.
         * 
         * @return builder
         * 
         */
        public Builder enableSsl(Boolean enableSsl) {
            return enableSsl(Output.of(enableSsl));
        }

        /**
         * @param maxSockets Maximum number of simultaneous HTTP connections accepted. Adjusting this value may cause server performance issues and is not generally recommended. Possible values for this setting vary by OS.
         * 
         * @return builder
         * 
         */
        public Builder maxSockets(@Nullable Output<Integer> maxSockets) {
            $.maxSockets = maxSockets;
            return this;
        }

        /**
         * @param maxSockets Maximum number of simultaneous HTTP connections accepted. Adjusting this value may cause server performance issues and is not generally recommended. Possible values for this setting vary by OS.
         * 
         * @return builder
         * 
         */
        public Builder maxSockets(Integer maxSockets) {
            return maxSockets(Output.of(maxSockets));
        }

        /**
         * @param maxThreads Maximum number of threads that can be used by active HTTP transactions. Adjusting this value may cause server performance issues and is not generally recommended. Possible values for this setting vary by OS.
         * 
         * @return builder
         * 
         */
        public Builder maxThreads(@Nullable Output<Integer> maxThreads) {
            $.maxThreads = maxThreads;
            return this;
        }

        /**
         * @param maxThreads Maximum number of threads that can be used by active HTTP transactions. Adjusting this value may cause server performance issues and is not generally recommended. Possible values for this setting vary by OS.
         * 
         * @return builder
         * 
         */
        public Builder maxThreads(Integer maxThreads) {
            return maxThreads(Output.of(maxThreads));
        }

        /**
         * @param port HTTP data input IP port.
         * 
         * @return builder
         * 
         */
        public Builder port(@Nullable Output<Integer> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port HTTP data input IP port.
         * 
         * @return builder
         * 
         */
        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        /**
         * @param useDeploymentServer Indicates whether the event collector input writes its configuration to a deployment server repository. When this setting is set to 1 (enabled), the input writes its configuration to the directory specified as repositoryLocation in serverclass.conf.
         * Copy the full contents of the splunk_httpinput app directory to this directory for the configuration to work. When enabled, only the tokens defined in the splunk_httpinput app in this repository are viewable and editable on the API and the Data Inputs page in Splunk Web. When disabled, the input writes its configuration to $SPLUNK_HOME/etc/apps by default. Defaults to 0 (disabled).
         * 
         * @return builder
         * 
         */
        public Builder useDeploymentServer(@Nullable Output<Integer> useDeploymentServer) {
            $.useDeploymentServer = useDeploymentServer;
            return this;
        }

        /**
         * @param useDeploymentServer Indicates whether the event collector input writes its configuration to a deployment server repository. When this setting is set to 1 (enabled), the input writes its configuration to the directory specified as repositoryLocation in serverclass.conf.
         * Copy the full contents of the splunk_httpinput app directory to this directory for the configuration to work. When enabled, only the tokens defined in the splunk_httpinput app in this repository are viewable and editable on the API and the Data Inputs page in Splunk Web. When disabled, the input writes its configuration to $SPLUNK_HOME/etc/apps by default. Defaults to 0 (disabled).
         * 
         * @return builder
         * 
         */
        public Builder useDeploymentServer(Integer useDeploymentServer) {
            return useDeploymentServer(Output.of(useDeploymentServer));
        }

        public GlobalHttpEventCollectorState build() {
            return $;
        }
    }

}
