// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.splunk;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.splunk.SavedSearchesArgs;
import com.pulumi.splunk.Utilities;
import com.pulumi.splunk.inputs.SavedSearchesState;
import com.pulumi.splunk.outputs.SavedSearchesAcl;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## # Resource: splunk.SavedSearches
 * 
 * Create and manage saved searches.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.splunk.SavedSearches;
 * import com.pulumi.splunk.SavedSearchesArgs;
 * import com.pulumi.splunk.inputs.SavedSearchesAclArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         var savedSearch = new SavedSearches("savedSearch", SavedSearchesArgs.builder()
 *             .name("Test New Alert")
 *             .search("index=main")
 *             .actions("email")
 *             .actionEmailFormat("table")
 *             .actionEmailMaxTime("5m")
 *             .actionEmailMaxResults(10)
 *             .actionEmailSendResults(false)
 *             .actionEmailSubject("Splunk Alert: $name$")
 *             .actionEmailTo("splunk}{@literal @}{@code splunk.com")
 *             .actionEmailTrackAlert(true)
 *             .dispatchEarliestTime("rt-15m")
 *             .dispatchLatestTime("rt-0m")
 *             .cronSchedule("*}&#47;{@code 5 * * * *")
 *             .acl(SavedSearchesAclArgs.builder()
 *                 .owner("admin")
 *                 .sharing("app")
 *                 .app("launcher")
 *                 .build())
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="splunk:index/savedSearches:SavedSearches")
public class SavedSearches extends com.pulumi.resources.CustomResource {
    /**
     * The app/user context that is the namespace for the resource
     * 
     */
    @Export(name="acl", refs={SavedSearchesAcl.class}, tree="[0]")
    private Output<SavedSearchesAcl> acl;

    /**
     * @return The app/user context that is the namespace for the resource
     * 
     */
    public Output<SavedSearchesAcl> acl() {
        return this.acl;
    }
    /**
     * Enable XSOAR alerting (Should by 1 (Enabled) or 0 (Disabled))
     * 
     */
    @Export(name="actionCreateXsoarIncident", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> actionCreateXsoarIncident;

    /**
     * @return Enable XSOAR alerting (Should by 1 (Enabled) or 0 (Disabled))
     * 
     */
    public Output<Optional<String>> actionCreateXsoarIncident() {
        return Codegen.optional(this.actionCreateXsoarIncident);
    }
    /**
     * XSOAR custom incident fields (should be a comma separated list)
     * 
     */
    @Export(name="actionCreateXsoarIncidentParamCustomFields", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> actionCreateXsoarIncidentParamCustomFields;

    /**
     * @return XSOAR custom incident fields (should be a comma separated list)
     * 
     */
    public Output<Optional<String>> actionCreateXsoarIncidentParamCustomFields() {
        return Codegen.optional(this.actionCreateXsoarIncidentParamCustomFields);
    }
    /**
     * XSOAR incident description
     * 
     */
    @Export(name="actionCreateXsoarIncidentParamDetails", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> actionCreateXsoarIncidentParamDetails;

    /**
     * @return XSOAR incident description
     * 
     */
    public Output<Optional<String>> actionCreateXsoarIncidentParamDetails() {
        return Codegen.optional(this.actionCreateXsoarIncidentParamDetails);
    }
    /**
     * XSOAR incident name
     * 
     */
    @Export(name="actionCreateXsoarIncidentParamIncidentName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> actionCreateXsoarIncidentParamIncidentName;

    /**
     * @return XSOAR incident name
     * 
     */
    public Output<Optional<String>> actionCreateXsoarIncidentParamIncidentName() {
        return Codegen.optional(this.actionCreateXsoarIncidentParamIncidentName);
    }
    /**
     * XSOAR incident time
     * 
     */
    @Export(name="actionCreateXsoarIncidentParamOccurred", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> actionCreateXsoarIncidentParamOccurred;

    /**
     * @return XSOAR incident time
     * 
     */
    public Output<Optional<String>> actionCreateXsoarIncidentParamOccurred() {
        return Codegen.optional(this.actionCreateXsoarIncidentParamOccurred);
    }
    /**
     * Enable XSOAR alerting sending to all servers (Should by 1 (Enabled) or 0 (Disabled)
     * 
     */
    @Export(name="actionCreateXsoarIncidentParamSendAllServers", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> actionCreateXsoarIncidentParamSendAllServers;

    /**
     * @return Enable XSOAR alerting sending to all servers (Should by 1 (Enabled) or 0 (Disabled)
     * 
     */
    public Output<Optional<String>> actionCreateXsoarIncidentParamSendAllServers() {
        return Codegen.optional(this.actionCreateXsoarIncidentParamSendAllServers);
    }
    /**
     * XSOAR Server instance URL (Should start with https:// || http://)
     * 
     */
    @Export(name="actionCreateXsoarIncidentParamServerUrl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> actionCreateXsoarIncidentParamServerUrl;

    /**
     * @return XSOAR Server instance URL (Should start with https:// || http://)
     * 
     */
    public Output<Optional<String>> actionCreateXsoarIncidentParamServerUrl() {
        return Codegen.optional(this.actionCreateXsoarIncidentParamServerUrl);
    }
    /**
     * XSOAR Severity (1 - Low, 2 - Medium, 3 - High, 4 - Critical)
     * 
     */
    @Export(name="actionCreateXsoarIncidentParamSeverity", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> actionCreateXsoarIncidentParamSeverity;

    /**
     * @return XSOAR Severity (1 - Low, 2 - Medium, 3 - High, 4 - Critical)
     * 
     */
    public Output<Optional<String>> actionCreateXsoarIncidentParamSeverity() {
        return Codegen.optional(this.actionCreateXsoarIncidentParamSeverity);
    }
    /**
     * XSOAR incident type
     * 
     */
    @Export(name="actionCreateXsoarIncidentParamType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> actionCreateXsoarIncidentParamType;

    /**
     * @return XSOAR incident type
     * 
     */
    public Output<Optional<String>> actionCreateXsoarIncidentParamType() {
        return Codegen.optional(this.actionCreateXsoarIncidentParamType);
    }
    /**
     * The state of the email action. Read-only attribute. Value ignored on POST. Use actions to specify a list of enabled actions. Defaults to 0.
     * 
     */
    @Export(name="actionEmail", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> actionEmail;

    /**
     * @return The state of the email action. Read-only attribute. Value ignored on POST. Use actions to specify a list of enabled actions. Defaults to 0.
     * 
     */
    public Output<Boolean> actionEmail() {
        return this.actionEmail;
    }
    /**
     * The password to use when authenticating with the SMTP server. Normally this value is set when editing the email settings, however you can set a clear text password here and it is encrypted on the next platform restart.Defaults to empty string.
     * 
     */
    @Export(name="actionEmailAuthPassword", refs={String.class}, tree="[0]")
    private Output<String> actionEmailAuthPassword;

    /**
     * @return The password to use when authenticating with the SMTP server. Normally this value is set when editing the email settings, however you can set a clear text password here and it is encrypted on the next platform restart.Defaults to empty string.
     * 
     */
    public Output<String> actionEmailAuthPassword() {
        return this.actionEmailAuthPassword;
    }
    /**
     * The username to use when authenticating with the SMTP server. If this is empty string, no authentication is attempted. Defaults to empty stringNOTE: Your SMTP server might reject unauthenticated emails.
     * 
     */
    @Export(name="actionEmailAuthUsername", refs={String.class}, tree="[0]")
    private Output<String> actionEmailAuthUsername;

    /**
     * @return The username to use when authenticating with the SMTP server. If this is empty string, no authentication is attempted. Defaults to empty stringNOTE: Your SMTP server might reject unauthenticated emails.
     * 
     */
    public Output<String> actionEmailAuthUsername() {
        return this.actionEmailAuthUsername;
    }
    /**
     * BCC email address to use if action.email is enabled.
     * 
     */
    @Export(name="actionEmailBcc", refs={String.class}, tree="[0]")
    private Output<String> actionEmailBcc;

    /**
     * @return BCC email address to use if action.email is enabled.
     * 
     */
    public Output<String> actionEmailBcc() {
        return this.actionEmailBcc;
    }
    /**
     * CC email address to use if action.email is enabled.
     * 
     */
    @Export(name="actionEmailCc", refs={String.class}, tree="[0]")
    private Output<String> actionEmailCc;

    /**
     * @return CC email address to use if action.email is enabled.
     * 
     */
    public Output<String> actionEmailCc() {
        return this.actionEmailCc;
    }
    /**
     * The search command (or pipeline) which is responsible for executing the action.Generally the command is a template search pipeline which is realized with values from the saved search. To reference saved search field values wrap them in $, for example to reference the savedsearch name use $name$, to reference the search use $search$.
     * 
     */
    @Export(name="actionEmailCommand", refs={String.class}, tree="[0]")
    private Output<String> actionEmailCommand;

    /**
     * @return The search command (or pipeline) which is responsible for executing the action.Generally the command is a template search pipeline which is realized with values from the saved search. To reference saved search field values wrap them in $, for example to reference the savedsearch name use $name$, to reference the search use $search$.
     * 
     */
    public Output<String> actionEmailCommand() {
        return this.actionEmailCommand;
    }
    /**
     * Valid values: (table | plain | html | raw | csv)Specify the format of text in the email. This value also applies to any attachments.
     * 
     */
    @Export(name="actionEmailFormat", refs={String.class}, tree="[0]")
    private Output<String> actionEmailFormat;

    /**
     * @return Valid values: (table | plain | html | raw | csv)Specify the format of text in the email. This value also applies to any attachments.
     * 
     */
    public Output<String> actionEmailFormat() {
        return this.actionEmailFormat;
    }
    /**
     * Email address from which the email action originates.Defaults to splunk{@literal @}$LOCALHOST or whatever value is set in alert_actions.conf.
     * 
     */
    @Export(name="actionEmailFrom", refs={String.class}, tree="[0]")
    private Output<String> actionEmailFrom;

    /**
     * @return Email address from which the email action originates.Defaults to splunk{@literal @}$LOCALHOST or whatever value is set in alert_actions.conf.
     * 
     */
    public Output<String> actionEmailFrom() {
        return this.actionEmailFrom;
    }
    /**
     * Sets the hostname used in the web link (url) sent in email actions.This value accepts two forms:hostname (for example, splunkserver, splunkserver.example.com)
     * 
     */
    @Export(name="actionEmailHostname", refs={String.class}, tree="[0]")
    private Output<String> actionEmailHostname;

    /**
     * @return Sets the hostname used in the web link (url) sent in email actions.This value accepts two forms:hostname (for example, splunkserver, splunkserver.example.com)
     * 
     */
    public Output<String> actionEmailHostname() {
        return this.actionEmailHostname;
    }
    /**
     * Specify whether to include a link to the results. Defaults to 0.
     * 
     */
    @Export(name="actionEmailIncludeResultsLink", refs={Integer.class}, tree="[0]")
    private Output<Integer> actionEmailIncludeResultsLink;

    /**
     * @return Specify whether to include a link to the results. Defaults to 0.
     * 
     */
    public Output<Integer> actionEmailIncludeResultsLink() {
        return this.actionEmailIncludeResultsLink;
    }
    /**
     * Specify whether to include the search that caused an email to be sent. Defaults to 0.
     * 
     */
    @Export(name="actionEmailIncludeSearch", refs={Integer.class}, tree="[0]")
    private Output<Integer> actionEmailIncludeSearch;

    /**
     * @return Specify whether to include the search that caused an email to be sent. Defaults to 0.
     * 
     */
    public Output<Integer> actionEmailIncludeSearch() {
        return this.actionEmailIncludeSearch;
    }
    /**
     * Specify whether to show the trigger condition that caused the alert to fire. Defaults to 0.
     * 
     */
    @Export(name="actionEmailIncludeTrigger", refs={Integer.class}, tree="[0]")
    private Output<Integer> actionEmailIncludeTrigger;

    /**
     * @return Specify whether to show the trigger condition that caused the alert to fire. Defaults to 0.
     * 
     */
    public Output<Integer> actionEmailIncludeTrigger() {
        return this.actionEmailIncludeTrigger;
    }
    /**
     * Specify whether to show the time that the alert was fired. Defaults to 0.
     * 
     */
    @Export(name="actionEmailIncludeTriggerTime", refs={Integer.class}, tree="[0]")
    private Output<Integer> actionEmailIncludeTriggerTime;

    /**
     * @return Specify whether to show the time that the alert was fired. Defaults to 0.
     * 
     */
    public Output<Integer> actionEmailIncludeTriggerTime() {
        return this.actionEmailIncludeTriggerTime;
    }
    /**
     * Specify whether to show the title and a link to enable the user to edit the saved search. Defaults to 0.
     * 
     */
    @Export(name="actionEmailIncludeViewLink", refs={Integer.class}, tree="[0]")
    private Output<Integer> actionEmailIncludeViewLink;

    /**
     * @return Specify whether to show the title and a link to enable the user to edit the saved search. Defaults to 0.
     * 
     */
    public Output<Integer> actionEmailIncludeViewLink() {
        return this.actionEmailIncludeViewLink;
    }
    /**
     * Indicates whether the search results are contained in the body of the email.Results can be either inline or attached to an email.
     * 
     */
    @Export(name="actionEmailInline", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> actionEmailInline;

    /**
     * @return Indicates whether the search results are contained in the body of the email.Results can be either inline or attached to an email.
     * 
     */
    public Output<Boolean> actionEmailInline() {
        return this.actionEmailInline;
    }
    /**
     * Set the address of the MTA server to be used to send the emails.Defaults to &lt;LOCALHOST&gt; or whatever is set in alert_actions.conf.
     * 
     */
    @Export(name="actionEmailMailserver", refs={String.class}, tree="[0]")
    private Output<String> actionEmailMailserver;

    /**
     * @return Set the address of the MTA server to be used to send the emails.Defaults to &lt;LOCALHOST&gt; or whatever is set in alert_actions.conf.
     * 
     */
    public Output<String> actionEmailMailserver() {
        return this.actionEmailMailserver;
    }
    /**
     * Sets the global maximum number of search results to send when email.action is enabled. Defaults to 100.
     * 
     */
    @Export(name="actionEmailMaxResults", refs={Integer.class}, tree="[0]")
    private Output<Integer> actionEmailMaxResults;

    /**
     * @return Sets the global maximum number of search results to send when email.action is enabled. Defaults to 100.
     * 
     */
    public Output<Integer> actionEmailMaxResults() {
        return this.actionEmailMaxResults;
    }
    /**
     * Valid values are Integer[m|s|h|d].Specifies the maximum amount of time the execution of an email action takes before the action is aborted. Defaults to 5m.
     * 
     */
    @Export(name="actionEmailMaxTime", refs={String.class}, tree="[0]")
    private Output<String> actionEmailMaxTime;

    /**
     * @return Valid values are Integer[m|s|h|d].Specifies the maximum amount of time the execution of an email action takes before the action is aborted. Defaults to 5m.
     * 
     */
    public Output<String> actionEmailMaxTime() {
        return this.actionEmailMaxTime;
    }
    /**
     * Customize the message sent in the emailed alert. Defaults to: The alert condition for &#39;$name$&#39; was triggered.
     * 
     */
    @Export(name="actionEmailMessageAlert", refs={String.class}, tree="[0]")
    private Output<String> actionEmailMessageAlert;

    /**
     * @return Customize the message sent in the emailed alert. Defaults to: The alert condition for &#39;$name$&#39; was triggered.
     * 
     */
    public Output<String> actionEmailMessageAlert() {
        return this.actionEmailMessageAlert;
    }
    /**
     * Customize the message sent in the emailed report. Defaults to: The scheduled report &#39;$name$&#39; has run
     * 
     */
    @Export(name="actionEmailMessageReport", refs={String.class}, tree="[0]")
    private Output<String> actionEmailMessageReport;

    /**
     * @return Customize the message sent in the emailed report. Defaults to: The scheduled report &#39;$name$&#39; has run
     * 
     */
    public Output<String> actionEmailMessageReport() {
        return this.actionEmailMessageReport;
    }
    /**
     * The name of the view to deliver if sendpdf is enabled
     * 
     */
    @Export(name="actionEmailPdfview", refs={String.class}, tree="[0]")
    private Output<String> actionEmailPdfview;

    /**
     * @return The name of the view to deliver if sendpdf is enabled
     * 
     */
    public Output<String> actionEmailPdfview() {
        return this.actionEmailPdfview;
    }
    /**
     * Search string to preprocess results before emailing them. Defaults to empty string (no preprocessing).Usually the preprocessing consists of filtering out unwanted internal fields.
     * 
     */
    @Export(name="actionEmailPreprocessResults", refs={String.class}, tree="[0]")
    private Output<String> actionEmailPreprocessResults;

    /**
     * @return Search string to preprocess results before emailing them. Defaults to empty string (no preprocessing).Usually the preprocessing consists of filtering out unwanted internal fields.
     * 
     */
    public Output<String> actionEmailPreprocessResults() {
        return this.actionEmailPreprocessResults;
    }
    /**
     * Space-separated list. Specifies the set (and load order) of CID fonts for handling Simplified Chinese(gb), Traditional Chinese(cns), Japanese(jp), and Korean(kor) in Integrated PDF Rendering.If multiple fonts provide a glyph for a given character code, the glyph from the first font specified in the list is used.To skip loading any CID fonts, specify the empty string.Defaults to &#39;gb cns jp kor&#39;
     * 
     */
    @Export(name="actionEmailReportCidFontList", refs={String.class}, tree="[0]")
    private Output<String> actionEmailReportCidFontList;

    /**
     * @return Space-separated list. Specifies the set (and load order) of CID fonts for handling Simplified Chinese(gb), Traditional Chinese(cns), Japanese(jp), and Korean(kor) in Integrated PDF Rendering.If multiple fonts provide a glyph for a given character code, the glyph from the first font specified in the list is used.To skip loading any CID fonts, specify the empty string.Defaults to &#39;gb cns jp kor&#39;
     * 
     */
    public Output<String> actionEmailReportCidFontList() {
        return this.actionEmailReportCidFontList;
    }
    /**
     * Indicates whether to include the Splunk logo with the report.
     * 
     */
    @Export(name="actionEmailReportIncludeSplunkLogo", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> actionEmailReportIncludeSplunkLogo;

    /**
     * @return Indicates whether to include the Splunk logo with the report.
     * 
     */
    public Output<Boolean> actionEmailReportIncludeSplunkLogo() {
        return this.actionEmailReportIncludeSplunkLogo;
    }
    /**
     * Valid values: (portrait | landscape)Specifies the paper orientation: portrait or landscape. Defaults to portrait.
     * 
     */
    @Export(name="actionEmailReportPaperOrientation", refs={String.class}, tree="[0]")
    private Output<String> actionEmailReportPaperOrientation;

    /**
     * @return Valid values: (portrait | landscape)Specifies the paper orientation: portrait or landscape. Defaults to portrait.
     * 
     */
    public Output<String> actionEmailReportPaperOrientation() {
        return this.actionEmailReportPaperOrientation;
    }
    /**
     * Valid values: (letter | legal | ledger | a2 | a3 | a4 | a5)Specifies the paper size for PDFs. Defaults to letter.
     * 
     */
    @Export(name="actionEmailReportPaperSize", refs={String.class}, tree="[0]")
    private Output<String> actionEmailReportPaperSize;

    /**
     * @return Valid values: (letter | legal | ledger | a2 | a3 | a4 | a5)Specifies the paper size for PDFs. Defaults to letter.
     * 
     */
    public Output<String> actionEmailReportPaperSize() {
        return this.actionEmailReportPaperSize;
    }
    /**
     * No Supported
     * 
     */
    @Export(name="actionEmailReportServerEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> actionEmailReportServerEnabled;

    /**
     * @return No Supported
     * 
     */
    public Output<Boolean> actionEmailReportServerEnabled() {
        return this.actionEmailReportServerEnabled;
    }
    /**
     * Not supported.For a default locally installed report server, the URL is http://localhost:8091/
     * 
     */
    @Export(name="actionEmailReportServerUrl", refs={String.class}, tree="[0]")
    private Output<String> actionEmailReportServerUrl;

    /**
     * @return Not supported.For a default locally installed report server, the URL is http://localhost:8091/
     * 
     */
    public Output<String> actionEmailReportServerUrl() {
        return this.actionEmailReportServerUrl;
    }
    /**
     * Specify whether to send results as a CSV file. Defaults to 0.
     * 
     */
    @Export(name="actionEmailSendCsv", refs={Integer.class}, tree="[0]")
    private Output<Integer> actionEmailSendCsv;

    /**
     * @return Specify whether to send results as a CSV file. Defaults to 0.
     * 
     */
    public Output<Integer> actionEmailSendCsv() {
        return this.actionEmailSendCsv;
    }
    /**
     * Indicates whether to create and send the results as a PDF. Defaults to false.
     * 
     */
    @Export(name="actionEmailSendPdf", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> actionEmailSendPdf;

    /**
     * @return Indicates whether to create and send the results as a PDF. Defaults to false.
     * 
     */
    public Output<Boolean> actionEmailSendPdf() {
        return this.actionEmailSendPdf;
    }
    /**
     * Indicates whether to attach the search results in the email.Results can be either attached or inline. See action.email.inline.
     * 
     */
    @Export(name="actionEmailSendResults", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> actionEmailSendResults;

    /**
     * @return Indicates whether to attach the search results in the email.Results can be either attached or inline. See action.email.inline.
     * 
     */
    public Output<Boolean> actionEmailSendResults() {
        return this.actionEmailSendResults;
    }
    /**
     * Specifies an alternate email subject.Defaults to SplunkAlert-&lt;savedsearchname&gt;.
     * 
     */
    @Export(name="actionEmailSubject", refs={String.class}, tree="[0]")
    private Output<String> actionEmailSubject;

    /**
     * @return Specifies an alternate email subject.Defaults to SplunkAlert-&lt;savedsearchname&gt;.
     * 
     */
    public Output<String> actionEmailSubject() {
        return this.actionEmailSubject;
    }
    /**
     * A comma or semicolon separated list of recipient email addresses. Required if this search is scheduled and the email alert action is enabled.
     * 
     */
    @Export(name="actionEmailTo", refs={String.class}, tree="[0]")
    private Output<String> actionEmailTo;

    /**
     * @return A comma or semicolon separated list of recipient email addresses. Required if this search is scheduled and the email alert action is enabled.
     * 
     */
    public Output<String> actionEmailTo() {
        return this.actionEmailTo;
    }
    /**
     * Indicates whether the execution of this action signifies a trackable alert.
     * 
     */
    @Export(name="actionEmailTrackAlert", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> actionEmailTrackAlert;

    /**
     * @return Indicates whether the execution of this action signifies a trackable alert.
     * 
     */
    public Output<Boolean> actionEmailTrackAlert() {
        return this.actionEmailTrackAlert;
    }
    /**
     * Valid values are Integer[p].Specifies the minimum time-to-live in seconds of the search artifacts if this action is triggered. If p follows &lt;Integer&gt;, int is the number of scheduled periods. Defaults to 86400 (24 hours).If no actions are triggered, the artifacts have their ttl determined by dispatch.ttl in savedsearches.conf.
     * 
     */
    @Export(name="actionEmailTtl", refs={String.class}, tree="[0]")
    private Output<String> actionEmailTtl;

    /**
     * @return Valid values are Integer[p].Specifies the minimum time-to-live in seconds of the search artifacts if this action is triggered. If p follows &lt;Integer&gt;, int is the number of scheduled periods. Defaults to 86400 (24 hours).If no actions are triggered, the artifacts have their ttl determined by dispatch.ttl in savedsearches.conf.
     * 
     */
    public Output<String> actionEmailTtl() {
        return this.actionEmailTtl;
    }
    /**
     * Indicates whether to use SSL when communicating with the SMTP server. Defaults to false.
     * 
     */
    @Export(name="actionEmailUseSsl", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> actionEmailUseSsl;

    /**
     * @return Indicates whether to use SSL when communicating with the SMTP server. Defaults to false.
     * 
     */
    public Output<Boolean> actionEmailUseSsl() {
        return this.actionEmailUseSsl;
    }
    /**
     * Indicates whether to use TLS (transport layer security) when communicating with the SMTP server (starttls).Defaults to false.
     * 
     */
    @Export(name="actionEmailUseTls", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> actionEmailUseTls;

    /**
     * @return Indicates whether to use TLS (transport layer security) when communicating with the SMTP server (starttls).Defaults to false.
     * 
     */
    public Output<Boolean> actionEmailUseTls() {
        return this.actionEmailUseTls;
    }
    /**
     * Indicates whether columns should be sorted from least wide to most wide, left to right.Only valid if format=text.
     * 
     */
    @Export(name="actionEmailWidthSortColumns", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> actionEmailWidthSortColumns;

    /**
     * @return Indicates whether columns should be sorted from least wide to most wide, left to right.Only valid if format=text.
     * 
     */
    public Output<Boolean> actionEmailWidthSortColumns() {
        return this.actionEmailWidthSortColumns;
    }
    /**
     * Jira Service Desk account name
     * 
     */
    @Export(name="actionJiraServiceDeskParamAccount", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> actionJiraServiceDeskParamAccount;

    /**
     * @return Jira Service Desk account name
     * 
     */
    public Output<Optional<String>> actionJiraServiceDeskParamAccount() {
        return Codegen.optional(this.actionJiraServiceDeskParamAccount);
    }
    /**
     * Jira custom fields data (see https://ta-jira-service-desk-simple-addon.readthedocs.io/en/latest/userguide.html)
     * 
     */
    @Export(name="actionJiraServiceDeskParamJiraCustomfields", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> actionJiraServiceDeskParamJiraCustomfields;

    /**
     * @return Jira custom fields data (see https://ta-jira-service-desk-simple-addon.readthedocs.io/en/latest/userguide.html)
     * 
     */
    public Output<Optional<String>> actionJiraServiceDeskParamJiraCustomfields() {
        return Codegen.optional(this.actionJiraServiceDeskParamJiraCustomfields);
    }
    /**
     * Jira issue description
     * 
     */
    @Export(name="actionJiraServiceDeskParamJiraDescription", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> actionJiraServiceDeskParamJiraDescription;

    /**
     * @return Jira issue description
     * 
     */
    public Output<Optional<String>> actionJiraServiceDeskParamJiraDescription() {
        return Codegen.optional(this.actionJiraServiceDeskParamJiraDescription);
    }
    /**
     * Jira issue type name
     * 
     */
    @Export(name="actionJiraServiceDeskParamJiraIssueType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> actionJiraServiceDeskParamJiraIssueType;

    /**
     * @return Jira issue type name
     * 
     */
    public Output<Optional<String>> actionJiraServiceDeskParamJiraIssueType() {
        return Codegen.optional(this.actionJiraServiceDeskParamJiraIssueType);
    }
    /**
     * Jira priority of issue
     * 
     */
    @Export(name="actionJiraServiceDeskParamJiraPriority", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> actionJiraServiceDeskParamJiraPriority;

    /**
     * @return Jira priority of issue
     * 
     */
    public Output<Optional<String>> actionJiraServiceDeskParamJiraPriority() {
        return Codegen.optional(this.actionJiraServiceDeskParamJiraPriority);
    }
    /**
     * Jira Project name
     * 
     */
    @Export(name="actionJiraServiceDeskParamJiraProject", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> actionJiraServiceDeskParamJiraProject;

    /**
     * @return Jira Project name
     * 
     */
    public Output<Optional<String>> actionJiraServiceDeskParamJiraProject() {
        return Codegen.optional(this.actionJiraServiceDeskParamJiraProject);
    }
    /**
     * Jira issue title/summary
     * 
     */
    @Export(name="actionJiraServiceDeskParamJiraSummary", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> actionJiraServiceDeskParamJiraSummary;

    /**
     * @return Jira issue title/summary
     * 
     */
    public Output<Optional<String>> actionJiraServiceDeskParamJiraSummary() {
        return Codegen.optional(this.actionJiraServiceDeskParamJiraSummary);
    }
    /**
     * Enable log event action (Should be 1 (Enabled) or 0 (Disabled))
     * 
     */
    @Export(name="actionLogevent", refs={String.class}, tree="[0]")
    private Output<String> actionLogevent;

    /**
     * @return Enable log event action (Should be 1 (Enabled) or 0 (Disabled))
     * 
     */
    public Output<String> actionLogevent() {
        return this.actionLogevent;
    }
    /**
     * Specific event text for the logged event.
     * 
     */
    @Export(name="actionLogeventParamEvent", refs={String.class}, tree="[0]")
    private Output<String> actionLogeventParamEvent;

    /**
     * @return Specific event text for the logged event.
     * 
     */
    public Output<String> actionLogeventParamEvent() {
        return this.actionLogeventParamEvent;
    }
    /**
     * Value for the host field of the logged event.
     * 
     */
    @Export(name="actionLogeventParamHost", refs={String.class}, tree="[0]")
    private Output<String> actionLogeventParamHost;

    /**
     * @return Value for the host field of the logged event.
     * 
     */
    public Output<String> actionLogeventParamHost() {
        return this.actionLogeventParamHost;
    }
    /**
     * Destination index where to store the logged event.
     * 
     */
    @Export(name="actionLogeventParamIndex", refs={String.class}, tree="[0]")
    private Output<String> actionLogeventParamIndex;

    /**
     * @return Destination index where to store the logged event.
     * 
     */
    public Output<String> actionLogeventParamIndex() {
        return this.actionLogeventParamIndex;
    }
    /**
     * Value for the source field of the logged event.
     * 
     */
    @Export(name="actionLogeventParamSource", refs={String.class}, tree="[0]")
    private Output<String> actionLogeventParamSource;

    /**
     * @return Value for the source field of the logged event.
     * 
     */
    public Output<String> actionLogeventParamSource() {
        return this.actionLogeventParamSource;
    }
    /**
     * Destination sourcetype where to store the logged event.
     * 
     */
    @Export(name="actionLogeventParamSourcetype", refs={String.class}, tree="[0]")
    private Output<String> actionLogeventParamSourcetype;

    /**
     * @return Destination sourcetype where to store the logged event.
     * 
     */
    public Output<String> actionLogeventParamSourcetype() {
        return this.actionLogeventParamSourcetype;
    }
    /**
     * The PagerDuty custom details information.
     * 
     */
    @Export(name="actionPagerdutyCustomDetails", refs={String.class}, tree="[0]")
    private Output<String> actionPagerdutyCustomDetails;

    /**
     * @return The PagerDuty custom details information.
     * 
     */
    public Output<String> actionPagerdutyCustomDetails() {
        return this.actionPagerdutyCustomDetails;
    }
    /**
     * The PagerDuty integration Key.
     * 
     */
    @Export(name="actionPagerdutyIntegrationKey", refs={String.class}, tree="[0]")
    private Output<String> actionPagerdutyIntegrationKey;

    /**
     * @return The PagerDuty integration Key.
     * 
     */
    public Output<String> actionPagerdutyIntegrationKey() {
        return this.actionPagerdutyIntegrationKey;
    }
    /**
     * The PagerDuty integration Key override.
     * 
     */
    @Export(name="actionPagerdutyIntegrationKeyOverride", refs={String.class}, tree="[0]")
    private Output<String> actionPagerdutyIntegrationKeyOverride;

    /**
     * @return The PagerDuty integration Key override.
     * 
     */
    public Output<String> actionPagerdutyIntegrationKeyOverride() {
        return this.actionPagerdutyIntegrationKeyOverride;
    }
    /**
     * The pagerduty integration URL. This integration uses Splunk&#39;s native webhooks to send events to PagerDuty.
     * 
     */
    @Export(name="actionPagerdutyIntegrationUrl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> actionPagerdutyIntegrationUrl;

    /**
     * @return The pagerduty integration URL. This integration uses Splunk&#39;s native webhooks to send events to PagerDuty.
     * 
     */
    public Output<Optional<String>> actionPagerdutyIntegrationUrl() {
        return Codegen.optional(this.actionPagerdutyIntegrationUrl);
    }
    /**
     * The pagerduty integration URL override. This integration uses Splunk&#39;s native webhooks to send events to PagerDuty.
     * 
     */
    @Export(name="actionPagerdutyIntegrationUrlOverride", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> actionPagerdutyIntegrationUrlOverride;

    /**
     * @return The pagerduty integration URL override. This integration uses Splunk&#39;s native webhooks to send events to PagerDuty.
     * 
     */
    public Output<Optional<String>> actionPagerdutyIntegrationUrlOverride() {
        return Codegen.optional(this.actionPagerdutyIntegrationUrlOverride);
    }
    /**
     * The state of the populate lookup action. Read-only attribute. Value ignored on POST. Use actions to specify a list of enabled actions. Defaults to 0.
     * 
     */
    @Export(name="actionPopulateLookup", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> actionPopulateLookup;

    /**
     * @return The state of the populate lookup action. Read-only attribute. Value ignored on POST. Use actions to specify a list of enabled actions. Defaults to 0.
     * 
     */
    public Output<Boolean> actionPopulateLookup() {
        return this.actionPopulateLookup;
    }
    /**
     * The search command (or pipeline) which is responsible for executing the action.
     * 
     */
    @Export(name="actionPopulateLookupCommand", refs={String.class}, tree="[0]")
    private Output<String> actionPopulateLookupCommand;

    /**
     * @return The search command (or pipeline) which is responsible for executing the action.
     * 
     */
    public Output<String> actionPopulateLookupCommand() {
        return this.actionPopulateLookupCommand;
    }
    /**
     * Lookup name of path of the lookup to populate
     * 
     */
    @Export(name="actionPopulateLookupDest", refs={String.class}, tree="[0]")
    private Output<String> actionPopulateLookupDest;

    /**
     * @return Lookup name of path of the lookup to populate
     * 
     */
    public Output<String> actionPopulateLookupDest() {
        return this.actionPopulateLookupDest;
    }
    /**
     * Sets the hostname used in the web link (url) sent in alert actions.This value accepts two forms: hostname (for example, splunkserver, splunkserver.example.com)\n\nprotocol://hostname:port (for example, http://splunkserver:8000, https://splunkserver.example.com:443)
     * 
     */
    @Export(name="actionPopulateLookupHostname", refs={String.class}, tree="[0]")
    private Output<String> actionPopulateLookupHostname;

    /**
     * @return Sets the hostname used in the web link (url) sent in alert actions.This value accepts two forms: hostname (for example, splunkserver, splunkserver.example.com)\n\nprotocol://hostname:port (for example, http://splunkserver:8000, https://splunkserver.example.com:443)
     * 
     */
    public Output<String> actionPopulateLookupHostname() {
        return this.actionPopulateLookupHostname;
    }
    /**
     * Sets the maximum number of search results sent using alerts. Defaults to 100.
     * 
     */
    @Export(name="actionPopulateLookupMaxResults", refs={Integer.class}, tree="[0]")
    private Output<Integer> actionPopulateLookupMaxResults;

    /**
     * @return Sets the maximum number of search results sent using alerts. Defaults to 100.
     * 
     */
    public Output<Integer> actionPopulateLookupMaxResults() {
        return this.actionPopulateLookupMaxResults;
    }
    /**
     * Valid values are: Integer[m|s|h|d]Sets the maximum amount of time the execution of an action takes before the action is aborted. Defaults to 5m.
     * 
     */
    @Export(name="actionPopulateLookupMaxTime", refs={Integer.class}, tree="[0]")
    private Output<Integer> actionPopulateLookupMaxTime;

    /**
     * @return Valid values are: Integer[m|s|h|d]Sets the maximum amount of time the execution of an action takes before the action is aborted. Defaults to 5m.
     * 
     */
    public Output<Integer> actionPopulateLookupMaxTime() {
        return this.actionPopulateLookupMaxTime;
    }
    /**
     * Indicates whether the execution of this action signifies a trackable alert.
     * 
     */
    @Export(name="actionPopulateLookupTrackAlert", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> actionPopulateLookupTrackAlert;

    /**
     * @return Indicates whether the execution of this action signifies a trackable alert.
     * 
     */
    public Output<Boolean> actionPopulateLookupTrackAlert() {
        return this.actionPopulateLookupTrackAlert;
    }
    /**
     * Valid values are Integer[p]Specifies the minimum time-to-live in seconds of the search artifacts if this action is triggered. If p follows Integer, then this specifies the number of scheduled periods. Defaults to 10p.
     * 
     */
    @Export(name="actionPopulateLookupTtl", refs={String.class}, tree="[0]")
    private Output<String> actionPopulateLookupTtl;

    /**
     * @return Valid values are Integer[p]Specifies the minimum time-to-live in seconds of the search artifacts if this action is triggered. If p follows Integer, then this specifies the number of scheduled periods. Defaults to 10p.
     * 
     */
    public Output<String> actionPopulateLookupTtl() {
        return this.actionPopulateLookupTtl;
    }
    /**
     * The state of the rss action. Read-only attribute. Value ignored on POST.Use actions to specify a list of enabled actions. Defaults to 0.
     * 
     */
    @Export(name="actionRss", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> actionRss;

    /**
     * @return The state of the rss action. Read-only attribute. Value ignored on POST.Use actions to specify a list of enabled actions. Defaults to 0.
     * 
     */
    public Output<Boolean> actionRss() {
        return this.actionRss;
    }
    /**
     * The search command (or pipeline) which is responsible for executing the action.Generally the command is a template search pipeline which is realized with values from the saved search. To reference saved search field values wrap them in $, for example to reference the savedsearch name use $name$, to reference the search use $search$.
     * 
     */
    @Export(name="actionRssCommand", refs={String.class}, tree="[0]")
    private Output<String> actionRssCommand;

    /**
     * @return The search command (or pipeline) which is responsible for executing the action.Generally the command is a template search pipeline which is realized with values from the saved search. To reference saved search field values wrap them in $, for example to reference the savedsearch name use $name$, to reference the search use $search$.
     * 
     */
    public Output<String> actionRssCommand() {
        return this.actionRssCommand;
    }
    /**
     * Sets the hostname used in the web link (url) sent in alert actions.This value accepts two forms:hostname (for example, splunkserver, splunkserver.example.com)\n\nprotocol://hostname:port (for example, http://splunkserver:8000, https://splunkserver.example.com:443)
     * 
     */
    @Export(name="actionRssHostname", refs={String.class}, tree="[0]")
    private Output<String> actionRssHostname;

    /**
     * @return Sets the hostname used in the web link (url) sent in alert actions.This value accepts two forms:hostname (for example, splunkserver, splunkserver.example.com)\n\nprotocol://hostname:port (for example, http://splunkserver:8000, https://splunkserver.example.com:443)
     * 
     */
    public Output<String> actionRssHostname() {
        return this.actionRssHostname;
    }
    /**
     * Sets the maximum number of search results sent using alerts. Defaults to 100.
     * 
     */
    @Export(name="actionRssMaxResults", refs={Integer.class}, tree="[0]")
    private Output<Integer> actionRssMaxResults;

    /**
     * @return Sets the maximum number of search results sent using alerts. Defaults to 100.
     * 
     */
    public Output<Integer> actionRssMaxResults() {
        return this.actionRssMaxResults;
    }
    /**
     * Valid values are Integer[m|s|h|d].Sets the maximum amount of time the execution of an action takes before the action is aborted. Defaults to 1m.
     * 
     */
    @Export(name="actionRssMaxTime", refs={Integer.class}, tree="[0]")
    private Output<Integer> actionRssMaxTime;

    /**
     * @return Valid values are Integer[m|s|h|d].Sets the maximum amount of time the execution of an action takes before the action is aborted. Defaults to 1m.
     * 
     */
    public Output<Integer> actionRssMaxTime() {
        return this.actionRssMaxTime;
    }
    /**
     * Indicates whether the execution of this action signifies a trackable alert.
     * 
     */
    @Export(name="actionRssTrackAlert", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> actionRssTrackAlert;

    /**
     * @return Indicates whether the execution of this action signifies a trackable alert.
     * 
     */
    public Output<Boolean> actionRssTrackAlert() {
        return this.actionRssTrackAlert;
    }
    /**
     * Valid values are: Integer[p] Specifies the minimum time-to-live in seconds of the search artifacts if this action is triggered. If p follows Integer, specifies the number of scheduled periods. Defaults to 86400 (24 hours).
     * 
     */
    @Export(name="actionRssTtl", refs={String.class}, tree="[0]")
    private Output<String> actionRssTtl;

    /**
     * @return Valid values are: Integer[p] Specifies the minimum time-to-live in seconds of the search artifacts if this action is triggered. If p follows Integer, specifies the number of scheduled periods. Defaults to 86400 (24 hours).
     * 
     */
    public Output<String> actionRssTtl() {
        return this.actionRssTtl;
    }
    /**
     * The state of the script action. Read-only attribute. Value ignored on POST. Use actions to specify a list of enabled actions. Defaults to 0.
     * 
     */
    @Export(name="actionScript", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> actionScript;

    /**
     * @return The state of the script action. Read-only attribute. Value ignored on POST. Use actions to specify a list of enabled actions. Defaults to 0.
     * 
     */
    public Output<Boolean> actionScript() {
        return this.actionScript;
    }
    /**
     * The search command (or pipeline) which is responsible for executing the action.Generally the command is a template search pipeline which is realized with values from the saved search. To reference saved search field values wrap them in $, for example to reference the savedsearch name use $name$, to reference the search use $search$.
     * 
     */
    @Export(name="actionScriptCommand", refs={String.class}, tree="[0]")
    private Output<String> actionScriptCommand;

    /**
     * @return The search command (or pipeline) which is responsible for executing the action.Generally the command is a template search pipeline which is realized with values from the saved search. To reference saved search field values wrap them in $, for example to reference the savedsearch name use $name$, to reference the search use $search$.
     * 
     */
    public Output<String> actionScriptCommand() {
        return this.actionScriptCommand;
    }
    /**
     * File name of the script to call. Required if script action is enabled
     * 
     */
    @Export(name="actionScriptFilename", refs={String.class}, tree="[0]")
    private Output<String> actionScriptFilename;

    /**
     * @return File name of the script to call. Required if script action is enabled
     * 
     */
    public Output<String> actionScriptFilename() {
        return this.actionScriptFilename;
    }
    /**
     * Sets the hostname used in the web link (url) sent in alert actions.This value accepts two forms:hostname (for example, splunkserver, splunkserver.example.com)\n\nprotocol://hostname:port (for example, http://splunkserver:8000, https://splunkserver.example.com:443)
     * 
     */
    @Export(name="actionScriptHostname", refs={String.class}, tree="[0]")
    private Output<String> actionScriptHostname;

    /**
     * @return Sets the hostname used in the web link (url) sent in alert actions.This value accepts two forms:hostname (for example, splunkserver, splunkserver.example.com)\n\nprotocol://hostname:port (for example, http://splunkserver:8000, https://splunkserver.example.com:443)
     * 
     */
    public Output<String> actionScriptHostname() {
        return this.actionScriptHostname;
    }
    /**
     * Sets the maximum number of search results sent using alerts. Defaults to 100.
     * 
     */
    @Export(name="actionScriptMaxResults", refs={Integer.class}, tree="[0]")
    private Output<Integer> actionScriptMaxResults;

    /**
     * @return Sets the maximum number of search results sent using alerts. Defaults to 100.
     * 
     */
    public Output<Integer> actionScriptMaxResults() {
        return this.actionScriptMaxResults;
    }
    /**
     * Valid values are Integer[m|s|h|d].Sets the maximum amount of time the execution of an action takes before the action is aborted. Defaults to 1m.
     * 
     */
    @Export(name="actionScriptMaxTime", refs={Integer.class}, tree="[0]")
    private Output<Integer> actionScriptMaxTime;

    /**
     * @return Valid values are Integer[m|s|h|d].Sets the maximum amount of time the execution of an action takes before the action is aborted. Defaults to 1m.
     * 
     */
    public Output<Integer> actionScriptMaxTime() {
        return this.actionScriptMaxTime;
    }
    /**
     * Indicates whether the execution of this action signifies a trackable alert.
     * 
     */
    @Export(name="actionScriptTrackAlert", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> actionScriptTrackAlert;

    /**
     * @return Indicates whether the execution of this action signifies a trackable alert.
     * 
     */
    public Output<Boolean> actionScriptTrackAlert() {
        return this.actionScriptTrackAlert;
    }
    /**
     * Valid values are: Integer[p] Specifies the minimum time-to-live in seconds of the search artifacts if this action is triggered. If p follows Integer, specifies the number of scheduled periods. Defaults to 86400 (24 hours).
     * 
     */
    @Export(name="actionScriptTtl", refs={String.class}, tree="[0]")
    private Output<String> actionScriptTtl;

    /**
     * @return Valid values are: Integer[p] Specifies the minimum time-to-live in seconds of the search artifacts if this action is triggered. If p follows Integer, specifies the number of scheduled periods. Defaults to 86400 (24 hours).
     * 
     */
    public Output<String> actionScriptTtl() {
        return this.actionScriptTtl;
    }
    /**
     * Include a message attachment. Valid values are message, none, or alert_link
     * 
     */
    @Export(name="actionSlackParamAttachment", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> actionSlackParamAttachment;

    /**
     * @return Include a message attachment. Valid values are message, none, or alert_link
     * 
     */
    public Output<Optional<String>> actionSlackParamAttachment() {
        return Codegen.optional(this.actionSlackParamAttachment);
    }
    /**
     * Slack channel to send the message to (Should start with # or {@literal @})
     * 
     */
    @Export(name="actionSlackParamChannel", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> actionSlackParamChannel;

    /**
     * @return Slack channel to send the message to (Should start with # or {@literal @})
     * 
     */
    public Output<Optional<String>> actionSlackParamChannel() {
        return Codegen.optional(this.actionSlackParamChannel);
    }
    /**
     * Show one or more fields from the search results below your Slack message. Comma-separated list of field names. Allows wildcards. eg. index,source*
     * 
     */
    @Export(name="actionSlackParamFields", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> actionSlackParamFields;

    /**
     * @return Show one or more fields from the search results below your Slack message. Comma-separated list of field names. Allows wildcards. eg. index,source*
     * 
     */
    public Output<Optional<String>> actionSlackParamFields() {
        return Codegen.optional(this.actionSlackParamFields);
    }
    /**
     * Enter the chat message to send to the Slack channel. The message can include tokens that insert text based on the results of the search.
     * 
     */
    @Export(name="actionSlackParamMessage", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> actionSlackParamMessage;

    /**
     * @return Enter the chat message to send to the Slack channel. The message can include tokens that insert text based on the results of the search.
     * 
     */
    public Output<Optional<String>> actionSlackParamMessage() {
        return Codegen.optional(this.actionSlackParamMessage);
    }
    /**
     * You can override the Slack webhook URL here if you need to send the alert message to a different Slack team
     * 
     */
    @Export(name="actionSlackParamWebhookUrlOverride", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> actionSlackParamWebhookUrlOverride;

    /**
     * @return You can override the Slack webhook URL here if you need to send the alert message to a different Slack team
     * 
     */
    public Output<Optional<String>> actionSlackParamWebhookUrlOverride() {
        return Codegen.optional(this.actionSlackParamWebhookUrlOverride);
    }
    /**
     * Account(s) for which the event is/ are to be created across ServiceNow instance(s).
     * 
     */
    @Export(name="actionSnowEventParamAccount", refs={String.class}, tree="[0]")
    private Output<String> actionSnowEventParamAccount;

    /**
     * @return Account(s) for which the event is/ are to be created across ServiceNow instance(s).
     * 
     */
    public Output<String> actionSnowEventParamAccount() {
        return this.actionSnowEventParamAccount;
    }
    /**
     * You can pass additional information that might be of use to the user. This field can also be used to supply the URL of your Splunk search head. When you use the snow_event.py alert-triggered script, the Splunk platform uses the URL to create a deep link that allows a ServiceNow user to navigate back to this Splunk platform search. You can find the resulting full URL for navigation from ServiceNow to the Splunk platform search by clicking Splunk Drilldown in the event page in ServiceNow. See an example below. Note that if you create events using the commands snowevent or snoweventstream, you must supply the URL in this field.You can pass the URL of Splunk as url=&lt;value&gt;. You can also pass other fields and their values by || separated key-value format. For example, url=&lt;value&gt;||k1=v1||k2=v2||....
     * 
     */
    @Export(name="actionSnowEventParamAdditionalInfo", refs={String.class}, tree="[0]")
    private Output<String> actionSnowEventParamAdditionalInfo;

    /**
     * @return You can pass additional information that might be of use to the user. This field can also be used to supply the URL of your Splunk search head. When you use the snow_event.py alert-triggered script, the Splunk platform uses the URL to create a deep link that allows a ServiceNow user to navigate back to this Splunk platform search. You can find the resulting full URL for navigation from ServiceNow to the Splunk platform search by clicking Splunk Drilldown in the event page in ServiceNow. See an example below. Note that if you create events using the commands snowevent or snoweventstream, you must supply the URL in this field.You can pass the URL of Splunk as url=&lt;value&gt;. You can also pass other fields and their values by || separated key-value format. For example, url=&lt;value&gt;||k1=v1||k2=v2||....
     * 
     */
    public Output<String> actionSnowEventParamAdditionalInfo() {
        return this.actionSnowEventParamAdditionalInfo;
    }
    /**
     * String that represents a configuration item in your network. You can pass value as || separated key-value format. For example, k1=v1||k2=v2.
     * 
     */
    @Export(name="actionSnowEventParamCiIdentifier", refs={String.class}, tree="[0]")
    private Output<String> actionSnowEventParamCiIdentifier;

    /**
     * @return String that represents a configuration item in your network. You can pass value as || separated key-value format. For example, k1=v1||k2=v2.
     * 
     */
    public Output<String> actionSnowEventParamCiIdentifier() {
        return this.actionSnowEventParamCiIdentifier;
    }
    /**
     * The custom fields which are configured at the ServiceNow Instance. You can pass the custom fields and their values in the || separated format. For example, custom_field1=value1||custom_field2=value2||...custom_fields used must be present in the em_event table of ServiceNow.
     * 
     */
    @Export(name="actionSnowEventParamCustomFields", refs={String.class}, tree="[0]")
    private Output<String> actionSnowEventParamCustomFields;

    /**
     * @return The custom fields which are configured at the ServiceNow Instance. You can pass the custom fields and their values in the || separated format. For example, custom_field1=value1||custom_field2=value2||...custom_fields used must be present in the em_event table of ServiceNow.
     * 
     */
    public Output<String> actionSnowEventParamCustomFields() {
        return this.actionSnowEventParamCustomFields;
    }
    /**
     * A brief description of the event.
     * 
     */
    @Export(name="actionSnowEventParamDescription", refs={String.class}, tree="[0]")
    private Output<String> actionSnowEventParamDescription;

    /**
     * @return A brief description of the event.
     * 
     */
    public Output<String> actionSnowEventParamDescription() {
        return this.actionSnowEventParamDescription;
    }
    /**
     * The node, formatted to follow your organization&#39;s ITIL standards and mapping. If the node value matches a CI with the same host name, the event is automatically assigned to the matching CI.
     * 
     */
    @Export(name="actionSnowEventParamNode", refs={String.class}, tree="[0]")
    private Output<String> actionSnowEventParamNode;

    /**
     * @return The node, formatted to follow your organization&#39;s ITIL standards and mapping. If the node value matches a CI with the same host name, the event is automatically assigned to the matching CI.
     * 
     */
    public Output<String> actionSnowEventParamNode() {
        return this.actionSnowEventParamNode;
    }
    /**
     * The resource, formatted to follow your organization&#39;s ITIL standards and mapping. For example, resource=&#39;CPU&#39;.
     * 
     */
    @Export(name="actionSnowEventParamResource", refs={String.class}, tree="[0]")
    private Output<String> actionSnowEventParamResource;

    /**
     * @return The resource, formatted to follow your organization&#39;s ITIL standards and mapping. For example, resource=&#39;CPU&#39;.
     * 
     */
    public Output<String> actionSnowEventParamResource() {
        return this.actionSnowEventParamResource;
    }
    /**
     * The severity associated with the event. 0 - Clear 1 - Critical 2 - Major 3 - Minor 4 - Warning
     * 
     */
    @Export(name="actionSnowEventParamSeverity", refs={Integer.class}, tree="[0]")
    private Output<Integer> actionSnowEventParamSeverity;

    /**
     * @return The severity associated with the event. 0 - Clear 1 - Critical 2 - Major 3 - Minor 4 - Warning
     * 
     */
    public Output<Integer> actionSnowEventParamSeverity() {
        return this.actionSnowEventParamSeverity;
    }
    /**
     * The type, formatted to follow your organization&#39;s ITIL standards and mapping. For example, type=&#39;Virtual Machine&#39;.
     * 
     */
    @Export(name="actionSnowEventParamType", refs={String.class}, tree="[0]")
    private Output<String> actionSnowEventParamType;

    /**
     * @return The type, formatted to follow your organization&#39;s ITIL standards and mapping. For example, type=&#39;Virtual Machine&#39;.
     * 
     */
    public Output<String> actionSnowEventParamType() {
        return this.actionSnowEventParamType;
    }
    /**
     * The state of the summary index action. Read-only attribute. Value ignored on POST. Use actions to specify a list of enabled actions. Defaults to 0.
     * 
     */
    @Export(name="actionSummaryIndex", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> actionSummaryIndex;

    /**
     * @return The state of the summary index action. Read-only attribute. Value ignored on POST. Use actions to specify a list of enabled actions. Defaults to 0.
     * 
     */
    public Output<Boolean> actionSummaryIndex() {
        return this.actionSummaryIndex;
    }
    /**
     * The search command (or pipeline) which is responsible for executing the action.Generally the command is a template search pipeline which is realized with values from the saved search. To reference saved search field values wrap them in $, for example to reference the savedsearch name use $name$, to reference the search use $search$.
     * 
     */
    @Export(name="actionSummaryIndexCommand", refs={String.class}, tree="[0]")
    private Output<String> actionSummaryIndexCommand;

    /**
     * @return The search command (or pipeline) which is responsible for executing the action.Generally the command is a template search pipeline which is realized with values from the saved search. To reference saved search field values wrap them in $, for example to reference the savedsearch name use $name$, to reference the search use $search$.
     * 
     */
    public Output<String> actionSummaryIndexCommand() {
        return this.actionSummaryIndexCommand;
    }
    /**
     * Sets the hostname used in the web link (url) sent in summary-index alert actions.This value accepts two forms:hostname (for example, splunkserver, splunkserver.example.com)protocol://hostname:port (for example, http://splunkserver:8000, https://splunkserver.example.com:443)
     * 
     */
    @Export(name="actionSummaryIndexHostname", refs={String.class}, tree="[0]")
    private Output<String> actionSummaryIndexHostname;

    /**
     * @return Sets the hostname used in the web link (url) sent in summary-index alert actions.This value accepts two forms:hostname (for example, splunkserver, splunkserver.example.com)protocol://hostname:port (for example, http://splunkserver:8000, https://splunkserver.example.com:443)
     * 
     */
    public Output<String> actionSummaryIndexHostname() {
        return this.actionSummaryIndexHostname;
    }
    /**
     * Determines whether to execute the summary indexing action as part of the scheduled search.NOTE: This option is considered only if the summary index action is enabled and is always executed (in other words, if counttype = always).Defaults to true
     * 
     */
    @Export(name="actionSummaryIndexInline", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> actionSummaryIndexInline;

    /**
     * @return Determines whether to execute the summary indexing action as part of the scheduled search.NOTE: This option is considered only if the summary index action is enabled and is always executed (in other words, if counttype = always).Defaults to true
     * 
     */
    public Output<Boolean> actionSummaryIndexInline() {
        return this.actionSummaryIndexInline;
    }
    /**
     * Sets the maximum number of search results sent using alerts. Defaults to 100.
     * 
     */
    @Export(name="actionSummaryIndexMaxResults", refs={Integer.class}, tree="[0]")
    private Output<Integer> actionSummaryIndexMaxResults;

    /**
     * @return Sets the maximum number of search results sent using alerts. Defaults to 100.
     * 
     */
    public Output<Integer> actionSummaryIndexMaxResults() {
        return this.actionSummaryIndexMaxResults;
    }
    /**
     * Valid values are Integer[m|s|h|d].Sets the maximum amount of time the execution of an action takes before the action is aborted. Defaults to 1m.
     * 
     */
    @Export(name="actionSummaryIndexMaxTime", refs={Integer.class}, tree="[0]")
    private Output<Integer> actionSummaryIndexMaxTime;

    /**
     * @return Valid values are Integer[m|s|h|d].Sets the maximum amount of time the execution of an action takes before the action is aborted. Defaults to 1m.
     * 
     */
    public Output<Integer> actionSummaryIndexMaxTime() {
        return this.actionSummaryIndexMaxTime;
    }
    /**
     * Specifies the name of the summary index where the results of the scheduled search are saved.Defaults to summary.
     * 
     */
    @Export(name="actionSummaryIndexName", refs={String.class}, tree="[0]")
    private Output<String> actionSummaryIndexName;

    /**
     * @return Specifies the name of the summary index where the results of the scheduled search are saved.Defaults to summary.
     * 
     */
    public Output<String> actionSummaryIndexName() {
        return this.actionSummaryIndexName;
    }
    /**
     * Indicates whether the execution of this action signifies a trackable alert.
     * 
     */
    @Export(name="actionSummaryIndexTrackAlert", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> actionSummaryIndexTrackAlert;

    /**
     * @return Indicates whether the execution of this action signifies a trackable alert.
     * 
     */
    public Output<Boolean> actionSummaryIndexTrackAlert() {
        return this.actionSummaryIndexTrackAlert;
    }
    /**
     * Valid values are: Integer[p] Specifies the minimum time-to-live in seconds of the search artifacts if this action is triggered. If p follows Integer, specifies the number of scheduled periods. Defaults to 86400 (24 hours).
     * 
     */
    @Export(name="actionSummaryIndexTtl", refs={String.class}, tree="[0]")
    private Output<String> actionSummaryIndexTtl;

    /**
     * @return Valid values are: Integer[p] Specifies the minimum time-to-live in seconds of the search artifacts if this action is triggered. If p follows Integer, specifies the number of scheduled periods. Defaults to 86400 (24 hours).
     * 
     */
    public Output<String> actionSummaryIndexTtl() {
        return this.actionSummaryIndexTtl;
    }
    /**
     * URL to send the HTTP POST request to. Must be accessible from the Splunk server
     * 
     */
    @Export(name="actionWebhookParamUrl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> actionWebhookParamUrl;

    /**
     * @return URL to send the HTTP POST request to. Must be accessible from the Splunk server
     * 
     */
    public Output<Optional<String>> actionWebhookParamUrl() {
        return Codegen.optional(this.actionWebhookParamUrl);
    }
    /**
     * A comma-separated list of actions to enable. For example: rss,email
     * 
     */
    @Export(name="actions", refs={String.class}, tree="[0]")
    private Output<String> actions;

    /**
     * @return A comma-separated list of actions to enable. For example: rss,email
     * 
     */
    public Output<String> actions() {
        return this.actions;
    }
    /**
     * One of the following strings: greater than, less than, equal to, rises by, drops by, rises by perc, drops by percUsed with alert_threshold to trigger alert actions.
     * 
     */
    @Export(name="alertComparator", refs={String.class}, tree="[0]")
    private Output<String> alertComparator;

    /**
     * @return One of the following strings: greater than, less than, equal to, rises by, drops by, rises by perc, drops by percUsed with alert_threshold to trigger alert actions.
     * 
     */
    public Output<String> alertComparator() {
        return this.alertComparator;
    }
    /**
     * Contains a conditional search that is evaluated against the results of the saved search. Defaults to an empty string.
     * 
     */
    @Export(name="alertCondition", refs={String.class}, tree="[0]")
    private Output<String> alertCondition;

    /**
     * @return Contains a conditional search that is evaluated against the results of the saved search. Defaults to an empty string.
     * 
     */
    public Output<String> alertCondition() {
        return this.alertCondition;
    }
    /**
     * Specifies whether alert actions are applied to the entire result set or on each individual result.Defaults to 1 (true).
     * 
     */
    @Export(name="alertDigestMode", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> alertDigestMode;

    /**
     * @return Specifies whether alert actions are applied to the entire result set or on each individual result.Defaults to 1 (true).
     * 
     */
    public Output<Boolean> alertDigestMode() {
        return this.alertDigestMode;
    }
    /**
     * Valid values: [number][time-unit]Sets the period of time to show the alert in the dashboard. Defaults to 24h.Use [number][time-unit] to specify a time. For example: 60 = 60 seconds, 1m = 1 minute, 1h = 60 minutes = 1 hour.
     * 
     */
    @Export(name="alertExpires", refs={String.class}, tree="[0]")
    private Output<String> alertExpires;

    /**
     * @return Valid values: [number][time-unit]Sets the period of time to show the alert in the dashboard. Defaults to 24h.Use [number][time-unit] to specify a time. For example: 60 = 60 seconds, 1m = 1 minute, 1h = 60 minutes = 1 hour.
     * 
     */
    public Output<String> alertExpires() {
        return this.alertExpires;
    }
    /**
     * Valid values: (1 | 2 | 3 | 4 | 5 | 6) Sets the alert severity level.Valid values are:1 DEBUG 2 INFO 3 WARN 4 ERROR 5 SEVERE 6 FATAL Defaults to 3.
     * 
     */
    @Export(name="alertSeverity", refs={Integer.class}, tree="[0]")
    private Output<Integer> alertSeverity;

    /**
     * @return Valid values: (1 | 2 | 3 | 4 | 5 | 6) Sets the alert severity level.Valid values are:1 DEBUG 2 INFO 3 WARN 4 ERROR 5 SEVERE 6 FATAL Defaults to 3.
     * 
     */
    public Output<Integer> alertSeverity() {
        return this.alertSeverity;
    }
    /**
     * Indicates whether alert suppression is enabled for this scheduled search.
     * 
     */
    @Export(name="alertSuppress", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> alertSuppress;

    /**
     * @return Indicates whether alert suppression is enabled for this scheduled search.
     * 
     */
    public Output<Boolean> alertSuppress() {
        return this.alertSuppress;
    }
    /**
     * Comma delimited list of fields to use for suppression when doing per result alerting. Required if suppression is turned on and per result alerting is enabled.
     * 
     */
    @Export(name="alertSuppressFields", refs={String.class}, tree="[0]")
    private Output<String> alertSuppressFields;

    /**
     * @return Comma delimited list of fields to use for suppression when doing per result alerting. Required if suppression is turned on and per result alerting is enabled.
     * 
     */
    public Output<String> alertSuppressFields() {
        return this.alertSuppressFields;
    }
    /**
     * Valid values: [number][time-unit] Specifies the suppresion period. Only valid if alert.supress is enabled.Use [number][time-unit] to specify a time. For example: 60 = 60 seconds, 1m = 1 minute, 1h = 60 minutes = 1 hour.
     * 
     */
    @Export(name="alertSuppressPeriod", refs={String.class}, tree="[0]")
    private Output<String> alertSuppressPeriod;

    /**
     * @return Valid values: [number][time-unit] Specifies the suppresion period. Only valid if alert.supress is enabled.Use [number][time-unit] to specify a time. For example: 60 = 60 seconds, 1m = 1 minute, 1h = 60 minutes = 1 hour.
     * 
     */
    public Output<String> alertSuppressPeriod() {
        return this.alertSuppressPeriod;
    }
    /**
     * Valid values are: Integer[%]Specifies the value to compare (see alert_comparator) before triggering the alert actions. If expressed as a percentage, indicates value to use when alert_comparator is set to rises by perc or drops by perc.
     * 
     */
    @Export(name="alertThreshold", refs={String.class}, tree="[0]")
    private Output<String> alertThreshold;

    /**
     * @return Valid values are: Integer[%]Specifies the value to compare (see alert_comparator) before triggering the alert actions. If expressed as a percentage, indicates value to use when alert_comparator is set to rises by perc or drops by perc.
     * 
     */
    public Output<String> alertThreshold() {
        return this.alertThreshold;
    }
    /**
     * Valid values: (true | false | auto) Specifies whether to track the actions triggered by this scheduled search.auto - determine whether to track or not based on the tracking setting of each action, do not track scheduled searches that always trigger actions. Default value true - force alert tracking.false - disable alert tracking for this search.
     * 
     */
    @Export(name="alertTrack", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> alertTrack;

    /**
     * @return Valid values: (true | false | auto) Specifies whether to track the actions triggered by this scheduled search.auto - determine whether to track or not based on the tracking setting of each action, do not track scheduled searches that always trigger actions. Default value true - force alert tracking.false - disable alert tracking for this search.
     * 
     */
    public Output<Boolean> alertTrack() {
        return this.alertTrack;
    }
    /**
     * What to base the alert on, overriden by alert_condition if it is specified. Valid values are: always, custom, number of events, number of hosts, number of sources.
     * 
     */
    @Export(name="alertType", refs={String.class}, tree="[0]")
    private Output<String> alertType;

    /**
     * @return What to base the alert on, overriden by alert_condition if it is specified. Valid values are: always, custom, number of events, number of hosts, number of sources.
     * 
     */
    public Output<String> alertType() {
        return this.alertType;
    }
    /**
     * Allows the search scheduler to distribute scheduled searches randomly and more evenly over their specified search periods.
     * 
     */
    @Export(name="allowSkew", refs={String.class}, tree="[0]")
    private Output<String> allowSkew;

    /**
     * @return Allows the search scheduler to distribute scheduled searches randomly and more evenly over their specified search periods.
     * 
     */
    public Output<String> allowSkew() {
        return this.allowSkew;
    }
    /**
     * Indicates whether the scheduler should ensure that the data for this search is automatically summarized. Defaults to 0.
     * 
     */
    @Export(name="autoSummarize", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> autoSummarize;

    /**
     * @return Indicates whether the scheduler should ensure that the data for this search is automatically summarized. Defaults to 0.
     * 
     */
    public Output<Boolean> autoSummarize() {
        return this.autoSummarize;
    }
    /**
     * An auto summarization template for this search. See auto summarization options in savedsearches.conf for more details.
     * 
     */
    @Export(name="autoSummarizeCommand", refs={String.class}, tree="[0]")
    private Output<String> autoSummarizeCommand;

    /**
     * @return An auto summarization template for this search. See auto summarization options in savedsearches.conf for more details.
     * 
     */
    public Output<String> autoSummarizeCommand() {
        return this.autoSummarizeCommand;
    }
    /**
     * Cron schedule that probes and generates the summaries for this saved search.The default value is *&#47;10 * * * * and corresponds to \`every ten hours\`.
     * 
     */
    @Export(name="autoSummarizeCronSchedule", refs={String.class}, tree="[0]")
    private Output<String> autoSummarizeCronSchedule;

    /**
     * @return Cron schedule that probes and generates the summaries for this saved search.The default value is *&#47;10 * * * * and corresponds to \`every ten hours\`.
     * 
     */
    public Output<String> autoSummarizeCronSchedule() {
        return this.autoSummarizeCronSchedule;
    }
    /**
     * A time string that specifies the earliest time for summarizing this search. Can be a relative or absolute time.If this value is an absolute time, use the dispatch.time_format to format the value.
     * 
     */
    @Export(name="autoSummarizeDispatchEarliestTime", refs={String.class}, tree="[0]")
    private Output<String> autoSummarizeDispatchEarliestTime;

    /**
     * @return A time string that specifies the earliest time for summarizing this search. Can be a relative or absolute time.If this value is an absolute time, use the dispatch.time_format to format the value.
     * 
     */
    public Output<String> autoSummarizeDispatchEarliestTime() {
        return this.autoSummarizeDispatchEarliestTime;
    }
    /**
     * A time string that specifies the latest time for summarizing this saved search. Can be a relative or absolute time.If this value is an absolute time, use the dispatch.time_format to format the value.
     * 
     */
    @Export(name="autoSummarizeDispatchLatestTime", refs={String.class}, tree="[0]")
    private Output<String> autoSummarizeDispatchLatestTime;

    /**
     * @return A time string that specifies the latest time for summarizing this saved search. Can be a relative or absolute time.If this value is an absolute time, use the dispatch.time_format to format the value.
     * 
     */
    public Output<String> autoSummarizeDispatchLatestTime() {
        return this.autoSummarizeDispatchLatestTime;
    }
    /**
     * Defines the time format that Splunk software uses to specify the earliest and latest time. Defaults to %FT%T.%Q%:z
     * 
     */
    @Export(name="autoSummarizeDispatchTimeFormat", refs={String.class}, tree="[0]")
    private Output<String> autoSummarizeDispatchTimeFormat;

    /**
     * @return Defines the time format that Splunk software uses to specify the earliest and latest time. Defaults to %FT%T.%Q%:z
     * 
     */
    public Output<String> autoSummarizeDispatchTimeFormat() {
        return this.autoSummarizeDispatchTimeFormat;
    }
    /**
     * Valid values: Integer[p]. Defaults to 60.Indicates the time to live (in seconds) for the artifacts of the summarization of the scheduled search.
     * 
     */
    @Export(name="autoSummarizeDispatchTtl", refs={String.class}, tree="[0]")
    private Output<String> autoSummarizeDispatchTtl;

    /**
     * @return Valid values: Integer[p]. Defaults to 60.Indicates the time to live (in seconds) for the artifacts of the summarization of the scheduled search.
     * 
     */
    public Output<String> autoSummarizeDispatchTtl() {
        return this.autoSummarizeDispatchTtl;
    }
    /**
     * The maximum number of buckets with the suspended summarization before the summarization search is completely stopped, and the summarization of the search is suspended for auto_summarize.suspend_period. Defaults to 2.
     * 
     */
    @Export(name="autoSummarizeMaxDisabledBuckets", refs={Integer.class}, tree="[0]")
    private Output<Integer> autoSummarizeMaxDisabledBuckets;

    /**
     * @return The maximum number of buckets with the suspended summarization before the summarization search is completely stopped, and the summarization of the search is suspended for auto_summarize.suspend_period. Defaults to 2.
     * 
     */
    public Output<Integer> autoSummarizeMaxDisabledBuckets() {
        return this.autoSummarizeMaxDisabledBuckets;
    }
    /**
     * The maximum ratio of summary_size/bucket_size, which specifies when to stop summarization and deem it unhelpful for a bucket. Defaults to 0.1 Note: The test is only performed if the summary size is larger than auto_summarize.max_summary_size.
     * 
     */
    @Export(name="autoSummarizeMaxSummaryRatio", refs={Double.class}, tree="[0]")
    private Output<Double> autoSummarizeMaxSummaryRatio;

    /**
     * @return The maximum ratio of summary_size/bucket_size, which specifies when to stop summarization and deem it unhelpful for a bucket. Defaults to 0.1 Note: The test is only performed if the summary size is larger than auto_summarize.max_summary_size.
     * 
     */
    public Output<Double> autoSummarizeMaxSummaryRatio() {
        return this.autoSummarizeMaxSummaryRatio;
    }
    /**
     * The minimum summary size, in bytes, before testing whether the summarization is helpful.The default value is 52428800 and is equivalent to 5MB.
     * 
     */
    @Export(name="autoSummarizeMaxSummarySize", refs={Integer.class}, tree="[0]")
    private Output<Integer> autoSummarizeMaxSummarySize;

    /**
     * @return The minimum summary size, in bytes, before testing whether the summarization is helpful.The default value is 52428800 and is equivalent to 5MB.
     * 
     */
    public Output<Integer> autoSummarizeMaxSummarySize() {
        return this.autoSummarizeMaxSummarySize;
    }
    /**
     * Maximum time (in seconds) that the summary search is allowed to run. Defaults to 3600.Note: This is an approximate time. The summary search stops at clean bucket boundaries.
     * 
     */
    @Export(name="autoSummarizeMaxTime", refs={Integer.class}, tree="[0]")
    private Output<Integer> autoSummarizeMaxTime;

    /**
     * @return Maximum time (in seconds) that the summary search is allowed to run. Defaults to 3600.Note: This is an approximate time. The summary search stops at clean bucket boundaries.
     * 
     */
    public Output<Integer> autoSummarizeMaxTime() {
        return this.autoSummarizeMaxTime;
    }
    /**
     * Time specfier indicating when to suspend summarization of this search if the summarization is deemed unhelpful.Defaults to 24h.
     * 
     */
    @Export(name="autoSummarizeSuspendPeriod", refs={String.class}, tree="[0]")
    private Output<String> autoSummarizeSuspendPeriod;

    /**
     * @return Time specfier indicating when to suspend summarization of this search if the summarization is deemed unhelpful.Defaults to 24h.
     * 
     */
    public Output<String> autoSummarizeSuspendPeriod() {
        return this.autoSummarizeSuspendPeriod;
    }
    /**
     * The list of time ranges that each summarized chunk should span. This comprises the list of available granularity levels for which summaries would be available. Specify a comma delimited list of time specifiers.For example a timechart over the last month whose granuality is at the day level should set this to 1d. If you need the same data summarized at the hour level for weekly charts, use: 1h,1d.
     * 
     */
    @Export(name="autoSummarizeTimespan", refs={String.class}, tree="[0]")
    private Output<String> autoSummarizeTimespan;

    /**
     * @return The list of time ranges that each summarized chunk should span. This comprises the list of available granularity levels for which summaries would be available. Specify a comma delimited list of time specifiers.For example a timechart over the last month whose granuality is at the day level should set this to 1d. If you need the same data summarized at the hour level for weekly charts, use: 1h,1d.
     * 
     */
    public Output<String> autoSummarizeTimespan() {
        return this.autoSummarizeTimespan;
    }
    /**
     * Valid values: cron stringThe cron schedule to execute this search. For example: *&#47;5 * * * * causes the search to execute every 5 minutes.
     * 
     */
    @Export(name="cronSchedule", refs={String.class}, tree="[0]")
    private Output<String> cronSchedule;

    /**
     * @return Valid values: cron stringThe cron schedule to execute this search. For example: *&#47;5 * * * * causes the search to execute every 5 minutes.
     * 
     */
    public Output<String> cronSchedule() {
        return this.cronSchedule;
    }
    /**
     * Human-readable description of this saved search. Defaults to empty string.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return Human-readable description of this saved search. Defaults to empty string.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * Indicates if the saved search is enabled. Defaults to 0.Disabled saved searches are not visible in Splunk Web.
     * 
     */
    @Export(name="disabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> disabled;

    /**
     * @return Indicates if the saved search is enabled. Defaults to 0.Disabled saved searches are not visible in Splunk Web.
     * 
     */
    public Output<Boolean> disabled() {
        return this.disabled;
    }
    /**
     * The maximum number of timeline buckets. Defaults to 0.
     * 
     */
    @Export(name="dispatchBuckets", refs={Integer.class}, tree="[0]")
    private Output<Integer> dispatchBuckets;

    /**
     * @return The maximum number of timeline buckets. Defaults to 0.
     * 
     */
    public Output<Integer> dispatchBuckets() {
        return this.dispatchBuckets;
    }
    /**
     * A time string that specifies the earliest time for this search. Can be a relative or absolute time. If this value is an absolute time, use the dispatch.time_format to format the value.
     * 
     */
    @Export(name="dispatchEarliestTime", refs={String.class}, tree="[0]")
    private Output<String> dispatchEarliestTime;

    /**
     * @return A time string that specifies the earliest time for this search. Can be a relative or absolute time. If this value is an absolute time, use the dispatch.time_format to format the value.
     * 
     */
    public Output<String> dispatchEarliestTime() {
        return this.dispatchEarliestTime;
    }
    /**
     * A time string that specifies the earliest index time for this search. Can be a relative or absolute time. If this value is an absolute time, use the dispatch.time_format to format the value.
     * 
     */
    @Export(name="dispatchIndexEarliest", refs={String.class}, tree="[0]")
    private Output<String> dispatchIndexEarliest;

    /**
     * @return A time string that specifies the earliest index time for this search. Can be a relative or absolute time. If this value is an absolute time, use the dispatch.time_format to format the value.
     * 
     */
    public Output<String> dispatchIndexEarliest() {
        return this.dispatchIndexEarliest;
    }
    /**
     * A time string that specifies the latest index time for this search. Can be a relative or absolute time. If this value is an absolute time, use the dispatch.time_format to format the value.
     * 
     */
    @Export(name="dispatchIndexLatest", refs={String.class}, tree="[0]")
    private Output<String> dispatchIndexLatest;

    /**
     * @return A time string that specifies the latest index time for this search. Can be a relative or absolute time. If this value is an absolute time, use the dispatch.time_format to format the value.
     * 
     */
    public Output<String> dispatchIndexLatest() {
        return this.dispatchIndexLatest;
    }
    /**
     * A time string that specifies the earliest time for this search. Can be a relative or absolute time. If this value is an absolute time, use the dispatch.time_format to format the value.
     * 
     */
    @Export(name="dispatchIndexedRealtime", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> dispatchIndexedRealtime;

    /**
     * @return A time string that specifies the earliest time for this search. Can be a relative or absolute time. If this value is an absolute time, use the dispatch.time_format to format the value.
     * 
     */
    public Output<Boolean> dispatchIndexedRealtime() {
        return this.dispatchIndexedRealtime;
    }
    /**
     * Allows for a per-job override of the [search] indexed_realtime_disk_sync_delay setting in limits.conf.
     * 
     */
    @Export(name="dispatchIndexedRealtimeMinspan", refs={Integer.class}, tree="[0]")
    private Output<Integer> dispatchIndexedRealtimeMinspan;

    /**
     * @return Allows for a per-job override of the [search] indexed_realtime_disk_sync_delay setting in limits.conf.
     * 
     */
    public Output<Integer> dispatchIndexedRealtimeMinspan() {
        return this.dispatchIndexedRealtimeMinspan;
    }
    /**
     * Allows for a per-job override of the [search] indexed_realtime_disk_sync_delay setting in limits.conf.
     * 
     */
    @Export(name="dispatchIndexedRealtimeOffset", refs={Integer.class}, tree="[0]")
    private Output<Integer> dispatchIndexedRealtimeOffset;

    /**
     * @return Allows for a per-job override of the [search] indexed_realtime_disk_sync_delay setting in limits.conf.
     * 
     */
    public Output<Integer> dispatchIndexedRealtimeOffset() {
        return this.dispatchIndexedRealtimeOffset;
    }
    /**
     * A time string that specifies the latest time for this saved search. Can be a relative or absolute time.If this value is an absolute time, use the dispatch.time_format to format the value.
     * 
     */
    @Export(name="dispatchLatestTime", refs={String.class}, tree="[0]")
    private Output<String> dispatchLatestTime;

    /**
     * @return A time string that specifies the latest time for this saved search. Can be a relative or absolute time.If this value is an absolute time, use the dispatch.time_format to format the value.
     * 
     */
    public Output<String> dispatchLatestTime() {
        return this.dispatchLatestTime;
    }
    /**
     * Enables or disables the lookups for this search. Defaults to 1.
     * 
     */
    @Export(name="dispatchLookups", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> dispatchLookups;

    /**
     * @return Enables or disables the lookups for this search. Defaults to 1.
     * 
     */
    public Output<Boolean> dispatchLookups() {
        return this.dispatchLookups;
    }
    /**
     * The maximum number of results before finalizing the search. Defaults to 500000.
     * 
     */
    @Export(name="dispatchMaxCount", refs={Integer.class}, tree="[0]")
    private Output<Integer> dispatchMaxCount;

    /**
     * @return The maximum number of results before finalizing the search. Defaults to 500000.
     * 
     */
    public Output<Integer> dispatchMaxCount() {
        return this.dispatchMaxCount;
    }
    /**
     * Indicates the maximum amount of time (in seconds) before finalizing the search. Defaults to 0.
     * 
     */
    @Export(name="dispatchMaxTime", refs={Integer.class}, tree="[0]")
    private Output<Integer> dispatchMaxTime;

    /**
     * @return Indicates the maximum amount of time (in seconds) before finalizing the search. Defaults to 0.
     * 
     */
    public Output<Integer> dispatchMaxTime() {
        return this.dispatchMaxTime;
    }
    /**
     * Specifies, in seconds, how frequently the MapReduce reduce phase runs on accumulated map values. Defaults to 10.
     * 
     */
    @Export(name="dispatchReduceFreq", refs={Integer.class}, tree="[0]")
    private Output<Integer> dispatchReduceFreq;

    /**
     * @return Specifies, in seconds, how frequently the MapReduce reduce phase runs on accumulated map values. Defaults to 10.
     * 
     */
    public Output<Integer> dispatchReduceFreq() {
        return this.dispatchReduceFreq;
    }
    /**
     * Whether to back fill the real time window for this search. Parameter valid only if this is a real time search. Defaults to 0.
     * 
     */
    @Export(name="dispatchRtBackfill", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> dispatchRtBackfill;

    /**
     * @return Whether to back fill the real time window for this search. Parameter valid only if this is a real time search. Defaults to 0.
     * 
     */
    public Output<Boolean> dispatchRtBackfill() {
        return this.dispatchRtBackfill;
    }
    /**
     * Allows for a per-job override of the [search] indexed_realtime_maximum_span setting in limits.conf.
     * 
     */
    @Export(name="dispatchRtMaximumSpan", refs={Integer.class}, tree="[0]")
    private Output<Integer> dispatchRtMaximumSpan;

    /**
     * @return Allows for a per-job override of the [search] indexed_realtime_maximum_span setting in limits.conf.
     * 
     */
    public Output<Integer> dispatchRtMaximumSpan() {
        return this.dispatchRtMaximumSpan;
    }
    /**
     * Specifies whether a new search process spawns when this saved search is executed. Defaults to 1. Searches against indexes must run in a separate process.
     * 
     */
    @Export(name="dispatchSpawnProcess", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> dispatchSpawnProcess;

    /**
     * @return Specifies whether a new search process spawns when this saved search is executed. Defaults to 1. Searches against indexes must run in a separate process.
     * 
     */
    public Output<Boolean> dispatchSpawnProcess() {
        return this.dispatchSpawnProcess;
    }
    /**
     * A time format string that defines the time format for specifying the earliest and latest time. Defaults to %FT%T.%Q%:z
     * 
     */
    @Export(name="dispatchTimeFormat", refs={String.class}, tree="[0]")
    private Output<String> dispatchTimeFormat;

    /**
     * @return A time format string that defines the time format for specifying the earliest and latest time. Defaults to %FT%T.%Q%:z
     * 
     */
    public Output<String> dispatchTimeFormat() {
        return this.dispatchTimeFormat;
    }
    /**
     * Valid values: Integer[p]. Defaults to 2p.Indicates the time to live (in seconds) for the artifacts of the scheduled search, if no actions are triggered.
     * 
     */
    @Export(name="dispatchTtl", refs={String.class}, tree="[0]")
    private Output<String> dispatchTtl;

    /**
     * @return Valid values: Integer[p]. Defaults to 2p.Indicates the time to live (in seconds) for the artifacts of the scheduled search, if no actions are triggered.
     * 
     */
    public Output<String> dispatchTtl() {
        return this.dispatchTtl;
    }
    /**
     * Defines the default UI view name (not label) in which to load the results. Accessibility is subject to the user having sufficient permissions.
     * 
     */
    @Export(name="displayView", refs={String.class}, tree="[0]")
    private Output<String> displayView;

    /**
     * @return Defines the default UI view name (not label) in which to load the results. Accessibility is subject to the user having sufficient permissions.
     * 
     */
    public Output<String> displayView() {
        return this.displayView;
    }
    /**
     * Whether this search is to be run on a schedule
     * 
     */
    @Export(name="isScheduled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isScheduled;

    /**
     * @return Whether this search is to be run on a schedule
     * 
     */
    public Output<Boolean> isScheduled() {
        return this.isScheduled;
    }
    /**
     * Specifies whether this saved search should be listed in the visible saved search list. Defaults to 1.
     * 
     */
    @Export(name="isVisible", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> isVisible;

    /**
     * @return Specifies whether this saved search should be listed in the visible saved search list. Defaults to 1.
     * 
     */
    public Output<Optional<Boolean>> isVisible() {
        return Codegen.optional(this.isVisible);
    }
    /**
     * The maximum number of concurrent instances of this search the scheduler is allowed to run. Defaults to 1.
     * 
     */
    @Export(name="maxConcurrent", refs={Integer.class}, tree="[0]")
    private Output<Integer> maxConcurrent;

    /**
     * @return The maximum number of concurrent instances of this search the scheduler is allowed to run. Defaults to 1.
     * 
     */
    public Output<Integer> maxConcurrent() {
        return this.maxConcurrent;
    }
    /**
     * A name for the search.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return A name for the search.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Defaults to 1. Controls the way the scheduler computes the next execution time of a scheduled search. If this value is set to 1, the scheduler bases its determination of the next scheduled search execution time on the current time. If this value is set to 0, the scheduler bases its determination of the next scheduled search on the last search execution time. This is called continuous scheduling. If set to 0, the scheduler never skips scheduled execution periods. However, the execution of the saved search might fall behind depending on the scheduler load. Use continuous scheduling whenever you enable the summary index option.
     * 
     */
    @Export(name="realtimeSchedule", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> realtimeSchedule;

    /**
     * @return Defaults to 1. Controls the way the scheduler computes the next execution time of a scheduled search. If this value is set to 1, the scheduler bases its determination of the next scheduled search execution time on the current time. If this value is set to 0, the scheduler bases its determination of the next scheduled search on the last search execution time. This is called continuous scheduling. If set to 0, the scheduler never skips scheduled execution periods. However, the execution of the saved search might fall behind depending on the scheduler load. Use continuous scheduling whenever you enable the summary index option.
     * 
     */
    public Output<Boolean> realtimeSchedule() {
        return this.realtimeSchedule;
    }
    /**
     * Specifies a field used by Splunk Web to denote the app this search should be dispatched in.
     * 
     */
    @Export(name="requestUiDispatchApp", refs={String.class}, tree="[0]")
    private Output<String> requestUiDispatchApp;

    /**
     * @return Specifies a field used by Splunk Web to denote the app this search should be dispatched in.
     * 
     */
    public Output<String> requestUiDispatchApp() {
        return this.requestUiDispatchApp;
    }
    /**
     * Specifies a field used by Splunk Web to denote the view this search should be displayed in.
     * 
     */
    @Export(name="requestUiDispatchView", refs={String.class}, tree="[0]")
    private Output<String> requestUiDispatchView;

    /**
     * @return Specifies a field used by Splunk Web to denote the view this search should be displayed in.
     * 
     */
    public Output<String> requestUiDispatchView() {
        return this.requestUiDispatchView;
    }
    /**
     * Specifies whether to restart a real-time search managed by the scheduler when a search peer becomes available for this saved search. Defaults to 1.
     * 
     */
    @Export(name="restartOnSearchpeerAdd", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> restartOnSearchpeerAdd;

    /**
     * @return Specifies whether to restart a real-time search managed by the scheduler when a search peer becomes available for this saved search. Defaults to 1.
     * 
     */
    public Output<Boolean> restartOnSearchpeerAdd() {
        return this.restartOnSearchpeerAdd;
    }
    /**
     * Indicates whether this search runs at startup. If it does not run on startup, it runs at the next scheduled time. Defaults to 0. Set to 1 for scheduled searches that populate lookup tables.
     * 
     */
    @Export(name="runOnStartup", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> runOnStartup;

    /**
     * @return Indicates whether this search runs at startup. If it does not run on startup, it runs at the next scheduled time. Defaults to 0. Set to 1 for scheduled searches that populate lookup tables.
     * 
     */
    public Output<Boolean> runOnStartup() {
        return this.runOnStartup;
    }
    /**
     * Raises the scheduling priority of the named search. Defaults to Default
     * 
     */
    @Export(name="schedulePriority", refs={String.class}, tree="[0]")
    private Output<String> schedulePriority;

    /**
     * @return Raises the scheduling priority of the named search. Defaults to Default
     * 
     */
    public Output<String> schedulePriority() {
        return this.schedulePriority;
    }
    /**
     * Time window (in minutes) during which the search has lower priority. Defaults to 0. The scheduler can give higher priority to more critical searches during this window. The window must be smaller than the search period.Set to auto to let the scheduler determine the optimal window value automatically. Requires the edit_search_schedule_window capability to override auto.
     * 
     */
    @Export(name="scheduleWindow", refs={String.class}, tree="[0]")
    private Output<String> scheduleWindow;

    /**
     * @return Time window (in minutes) during which the search has lower priority. Defaults to 0. The scheduler can give higher priority to more critical searches during this window. The window must be smaller than the search period.Set to auto to let the scheduler determine the optimal window value automatically. Requires the edit_search_schedule_window capability to override auto.
     * 
     */
    public Output<String> scheduleWindow() {
        return this.scheduleWindow;
    }
    /**
     * Required when creating a new search.
     * 
     */
    @Export(name="search", refs={String.class}, tree="[0]")
    private Output<String> search;

    /**
     * @return Required when creating a new search.
     * 
     */
    public Output<String> search() {
        return this.search;
    }
    /**
     * Defines the viewstate id associated with the UI view listed in &#39;displayview&#39;.
     * 
     */
    @Export(name="vsid", refs={String.class}, tree="[0]")
    private Output<String> vsid;

    /**
     * @return Defines the viewstate id associated with the UI view listed in &#39;displayview&#39;.
     * 
     */
    public Output<String> vsid() {
        return this.vsid;
    }
    /**
     * Specifies the new workload pool where the existing running search will be placed.`
     * 
     */
    @Export(name="workloadPool", refs={String.class}, tree="[0]")
    private Output<String> workloadPool;

    /**
     * @return Specifies the new workload pool where the existing running search will be placed.`
     * 
     */
    public Output<String> workloadPool() {
        return this.workloadPool;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SavedSearches(java.lang.String name) {
        this(name, SavedSearchesArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SavedSearches(java.lang.String name, SavedSearchesArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SavedSearches(java.lang.String name, SavedSearchesArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("splunk:index/savedSearches:SavedSearches", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private SavedSearches(java.lang.String name, Output<java.lang.String> id, @Nullable SavedSearchesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("splunk:index/savedSearches:SavedSearches", name, state, makeResourceOptions(options, id), false);
    }

    private static SavedSearchesArgs makeArgs(SavedSearchesArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? SavedSearchesArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SavedSearches get(java.lang.String name, Output<java.lang.String> id, @Nullable SavedSearchesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SavedSearches(name, id, state, options);
    }
}
